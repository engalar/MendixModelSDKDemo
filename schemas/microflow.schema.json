{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "you must give a module name when gen a model, so i can confirm qulified name",
    "title": "Microflow Structure Schema",
    "definitions": {
        "ErrorHandlingType": {
            "type": "string",
            "enum": [
                "Rollback",
                "Custom"
            ]
        },
        "EntityQualifiedName": {
            "type": "string",
            "description": "Entity qualified name",
            "examples": [
                "SomeModuleName.EntityName"
            ]
        },
        "Size": {
            "type": "object",
            "properties": {
                "width": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                }
            },
            "required": [
                "width",
                "height"
            ]
        },
        "RelativePoint": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            },
            "required": [
                "x",
                "y"
            ]
        },
        "BezierVector": {
            "type": "object",
            "properties": {
                "width": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                }
            },
            "required": [
                "width",
                "height"
            ]
        },
        "NoCase": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$NoCase"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type"
            ]
        },
        "MicroflowObject": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the microflow object"
                },
                "relativeMiddlePoint": {
                    "$ref": "#/definitions/RelativePoint"
                },
                "size": {
                    "$ref": "#/definitions/Size"
                },
                "documentation": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "relativeMiddlePoint",
                "size",
                "documentation"
            ]
        },
        "MicroflowFlow": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier for the flow element."
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$SequenceFlow",
                        "Microflows$AnnotationFlow"
                    ],
                    "description": "Type of the flow element."
                },
                "origin": {
                    "type": "string",
                    "description": "Identifier of the originating element."
                },
                "destination": {
                    "type": "string",
                    "description": "Identifier of the destination element."
                },
                "originConnectionIndex": {
                    "type": "integer",
                    "description": "Index of the connection at the origin."
                },
                "destinationConnectionIndex": {
                    "type": "integer",
                    "description": "Index of the connection at the destination."
                },
                "originBezierVector": {
                    "type": "object",
                    "description": "Bezier vector for the origin point.",
                    "properties": {
                        "width": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "width",
                        "height"
                    ]
                },
                "destinationBezierVector": {
                    "type": "object",
                    "description": "Bezier vector for the destination point.",
                    "properties": {
                        "width": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "width",
                        "height"
                    ]
                },
                "lineType": {
                    "type": "string",
                    "enum": [
                        "BezierCurve"
                    ],
                    "description": "Type of line used for the flow."
                },
                "caseValue": {
                    "type": "object",
                    "description": "Case value for conditional flows.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier for the case value."
                        },
                        "$Type": {
                            "type": [
                                "string"
                            ],
                            "enum": [
                                "Microflows$NoCase",
                                "Microflows$EnumerationCase",
                                "Microflows$InheritanceCase"
                            ],
                            "description": "Type of the case value"
                        },
                        "value": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Value of the enumeration case"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type"
                    ]
                },
                "isErrorHandler": {
                    "type": "boolean",
                    "description": "Indicates if the flow is an error handler flow.",
                    "default": false
                }
            },
            "required": [
                "$ID",
                "$Type",
                "origin",
                "destination",
                "originConnectionIndex",
                "destinationConnectionIndex",
                "originBezierVector",
                "destinationBezierVector",
                "lineType"
            ]
        },
        "RetrieveSource": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$DatabaseRetrieveSource"
                    ]
                },
                "entity": {
                    "$ref": "#/definitions/EntityQualifiedName"
                },
                "range": {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "Microflows$ConstantRange"
                            ]
                        },
                        "singleObject": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "singleObject"
                    ]
                },
                "xPathConstraint": {
                    "type": "string"
                },
                "sortItemList": {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "Microflows$SortItemList"
                            ]
                        },
                        "items": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "items"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "entity",
                "range",
                "xPathConstraint",
                "sortItemList"
            ]
        },
        "Action": {
            "error": "Invalid value, must match one of the schemas",
            "oneOf": [
                {
                    "type": "object",
                    "description": "actual action for java action call",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/Identifiable"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "Microflows$JavaActionCallAction"
                            ]
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "javaAction": {
                            "$ref": "common.schema.json#/definitions/QualifiedName"
                        },
                        "outputVariableName": {
                            "type": "string"
                        },
                        "queueSettings": {
                            "type": "null"
                        },
                        "parameterMappings": {
                            "type": "array",
                            "items": {},
                            "default": []
                        },
                        "useReturnVariable": {
                            "type": "boolean",
                            "default": true,
                            "description": "if true, the outputVariableName is used as return value"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "javaAction",
                        "queueSettings",
                        "parameterMappings",
                        "useReturnVariable",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "description": "actual action for log message",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/Identifiable"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "Microflows$LogMessageAction"
                            ]
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "level": {
                            "type": "string",
                            "enum": [
                                "Trace",
                                "Debug",
                                "Info",
                                "Warn",
                                "Error",
                                "Critical"
                            ]
                        },
                        "node": {
                            "type": "string"
                        },
                        "messageTemplate": {
                            "$ref": "common.schema.json#/definitions/StringTemplate"
                        },
                        "includeLatestStackTrace": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "level",
                        "node",
                        "messageTemplate",
                        "includeLatestStackTrace"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$CreateObjectAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MemberChange"
                            }
                        },
                        "refreshInClient": {
                            "type": "boolean"
                        },
                        "commit": {
                            "type": "string",
                            "enum": [
                                "No"
                            ]
                        },
                        "entity": {
                            "$ref": "#/definitions/EntityQualifiedName"
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "items",
                        "refreshInClient",
                        "commit",
                        "entity",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$DeleteAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "deleteVariableName": {
                            "type": "string"
                        },
                        "refreshInClient": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "deleteVariableName",
                        "refreshInClient"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ListOperationAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "operation": {
                            "type": "object",
                            "properties": {
                                "$ID": {
                                    "$ref": "common.schema.json#/definitions/GUID"
                                },
                                "$Type": {
                                    "type": "string",
                                    "const": "Microflows$Subtract"
                                },
                                "listVariableName": {
                                    "type": "string"
                                },
                                "secondListOrObjectVariableName": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "listVariableName",
                                "secondListOrObjectVariableName"
                            ]
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "operation",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$RetrieveAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "retrieveSource": {
                            "$ref": "#/definitions/DatabaseRetrieveSource"
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "retrieveSource",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$RollbackAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "rollbackVariableName": {
                            "type": "string"
                        },
                        "refreshInClient": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "rollbackVariableName",
                        "refreshInClient"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$CommitAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "withEvents": {
                            "type": "boolean"
                        },
                        "commitVariableName": {
                            "type": "string"
                        },
                        "refreshInClient": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "withEvents",
                        "commitVariableName",
                        "refreshInClient"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ChangeObjectAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MemberChange"
                            }
                        },
                        "refreshInClient": {
                            "type": "boolean"
                        },
                        "commit": {
                            "type": "string",
                            "enum": [
                                "Yes"
                            ]
                        },
                        "changeVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "items",
                        "refreshInClient",
                        "commit",
                        "changeVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$AggregateListAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "inputListVariableName": {
                            "type": "string"
                        },
                        "attribute": {
                            "$ref": "common.schema.json#/definitions/AttributeQualifiedName"
                        },
                        "expression": {
                            "type": "string"
                        },
                        "useExpression": {
                            "type": "boolean"
                        },
                        "aggregateFunction": {
                            "type": "string",
                            "enum": [
                                "Sum"
                            ]
                        },
                        "outputVariableName": {
                            "type": "string"
                        },
                        "reduceReturnDataType": {
                            "$ref": "#/definitions/VariableType"
                        },
                        "reduceInitialValueExpression": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "inputListVariableName",
                        "attribute",
                        "expression",
                        "useExpression",
                        "aggregateFunction",
                        "outputVariableName",
                        "reduceReturnDataType",
                        "reduceInitialValueExpression"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ChangeListAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "changeVariableName": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Add"
                            ]
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "changeVariableName",
                        "value",
                        "type"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$CreateListAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "entity": {
                            "$ref": "#/definitions/EntityQualifiedName"
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "entity",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ListOperationAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "operation": {
                            "$ref": "#/definitions/ListOperation"
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "operation",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$MicroflowCallAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "microflowCall": {
                            "$ref": "#/definitions/MicroflowCall"
                        },
                        "useReturnVariable": {
                            "type": "boolean"
                        },
                        "outputVariableName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "microflowCall",
                        "useReturnVariable",
                        "outputVariableName"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$CreateVariableAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "variableName": {
                            "type": "string"
                        },
                        "variableType": {
                            "$ref": "#/definitions/VariableType"
                        },
                        "initialValue": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "variableName",
                        "variableType",
                        "initialValue"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ChangeVariableAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "changeVariableName": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "changeVariableName",
                        "value"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$ShowPageAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "pageSettings": {
                            "$ref": "#/definitions/PageSettings"
                        },
                        "numberOfPagesToClose": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "pageSettings",
                        "numberOfPagesToClose"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$CloseFormAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "numberOfPagesToClose": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "numberOfPagesToClose"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/GUID"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$RestCallAction"
                        },
                        "errorHandlingType": {
                            "$ref": "#/definitions/ErrorHandlingType"
                        },
                        "httpConfiguration": {
                            "$ref": "#/definitions/HttpConfiguration"
                        },
                        "requestHandling": {
                            "$ref": "#/definitions/CustomRequestHandling"
                        },
                        "requestHandlingType": {
                            "type": "string",
                            "enum": [
                                "Custom"
                            ]
                        },
                        "resultHandling": {
                            "$ref": "#/definitions/ResultHandling"
                        },
                        "resultHandlingType": {
                            "type": "string",
                            "enum": [
                                "None"
                            ]
                        },
                        "errorResultHandlingType": {
                            "type": "string",
                            "enum": [
                                "HttpResponse"
                            ]
                        },
                        "useRequestTimeOut": {
                            "type": "boolean"
                        },
                        "timeOutExpression": {
                            "type": "string"
                        },
                        "requestProxyType": {
                            "type": "string",
                            "enum": [
                                "DefaultProxy"
                            ]
                        },
                        "proxyConfiguration": {
                            "type": "null"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "errorHandlingType",
                        "httpConfiguration",
                        "requestHandling",
                        "requestHandlingType",
                        "resultHandling",
                        "resultHandlingType",
                        "errorResultHandlingType",
                        "useRequestTimeOut",
                        "timeOutExpression",
                        "requestProxyType"
                    ]
                }
            ]
        },
        "ReturnType": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "DataTypes$StringType",
                                "DataTypes$VoidType",
                                "DataTypes$ListType",
                                "DataTypes$BooleanType"
                            ]
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "enum": [
                                "DataTypes$ObjectType"
                            ]
                        },
                        "entity": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "entity"
                    ]
                }
            ]
        },
        "MemberChange": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$MemberChange"
                },
                "attribute": {
                    "type": "string"
                },
                "association": {
                    "type": "null"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Set"
                    ]
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "attribute",
                "type",
                "value"
            ]
        },
        "SortItem": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$SortItem"
                },
                "attributeRef": {
                    "$ref": "common.schema.json#/definitions/AttributeRef"
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "Ascending",
                        "Descending"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "attributeRef",
                "sortOrder"
            ]
        },
        "SortItemList": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$SortItemList"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortItem"
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "items"
            ]
        },
        "MicroflowCall": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$MicroflowCall"
                },
                "microflow": {
                    "$ref": "common.schema.json#/definitions/QualifiedName"
                },
                "queueSettings": {
                    "type": "null"
                },
                "parameterMappings": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "$ID",
                "$Type",
                "microflow",
                "parameterMappings"
            ]
        },
        "VariableType": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "DataTypes$BooleanType",
                        "DataTypes$VoidType"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type"
            ]
        },
        "PageSettings": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Pages$PageSettings"
                },
                "page": {
                    "$ref": "common.schema.json#/definitions/QualifiedName",
                    "description": "page qualified name"
                },
                "titleOverride": {
                    "type": "null"
                },
                "parameterMappings": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "$ID",
                "$Type",
                "page",
                "parameterMappings"
            ]
        },
        "DatabaseRetrieveSource": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/Identifiable"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$AssociationRetrieveSource"
                        },
                        "startVariableName": {
                            "type": "string",
                            "examples": [
                                "User"
                            ]
                        },
                        "association": {
                            "description": "combie with startVariableName to xpath. e.g. User/System.UserRoles",
                            "type": "string",
                            "examples": [
                                "System.UserRoles"
                            ]
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "startVariableName",
                        "association"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "$ref": "common.schema.json#/definitions/Identifiable"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Microflows$DatabaseRetrieveSource"
                        },
                        "entity": {
                            "$ref": "#/definitions/EntityQualifiedName"
                        },
                        "range": {
                            "type": "object",
                            "oneOf": [
                                {
                                    "properties": {
                                        "$ID": {
                                            "$ref": "common.schema.json#/definitions/GUID"
                                        },
                                        "$Type": {
                                            "type": "string",
                                            "const": "Microflows$ConstantRange"
                                        },
                                        "singleObject": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "$ID",
                                        "$Type",
                                        "singleObject"
                                    ]
                                },
                                {
                                    "properties": {
                                        "$ID": {
                                            "$ref": "common.schema.json#/definitions/GUID"
                                        },
                                        "$Type": {
                                            "type": "string",
                                            "const": "Microflows$CustomRange"
                                        },
                                        "limitExpression": {
                                            "type": "string"
                                        },
                                        "offsetExpression": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "$ID",
                                        "$Type",
                                        "limitExpression",
                                        "offsetExpression"
                                    ]
                                }
                            ]
                        },
                        "xPathConstraint": {
                            "type": "string"
                        },
                        "sortItemList": {
                            "$ref": "#/definitions/SortItemList"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "entity",
                        "range",
                        "xPathConstraint",
                        "sortItemList"
                    ]
                }
            ]
        },
        "ListOperation": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$Union"
                },
                "listVariableName": {
                    "type": "string"
                },
                "secondListOrObjectVariableName": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "listVariableName",
                "secondListOrObjectVariableName"
            ]
        },
        "HttpConfiguration": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$HttpConfiguration"
                },
                "overrideLocation": {
                    "type": "boolean"
                },
                "customLocation": {
                    "type": "string"
                },
                "customLocationTemplate": {
                    "$ref": "common.schema.json#/definitions/StringTemplate"
                },
                "useAuthentication": {
                    "type": "boolean"
                },
                "httpAuthenticationUserName": {
                    "type": "string"
                },
                "authenticationPassword": {
                    "type": "string"
                },
                "headerEntries": {
                    "type": "array",
                    "items": {}
                },
                "newHttpMethod": {
                    "type": "string",
                    "enum": [
                        "Get"
                    ]
                },
                "clientCertificate": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "overrideLocation",
                "customLocation",
                "customLocationTemplate",
                "useAuthentication",
                "httpAuthenticationUserName",
                "authenticationPassword",
                "headerEntries",
                "newHttpMethod",
                "clientCertificate"
            ]
        },
        "CustomRequestHandling": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$CustomRequestHandling"
                },
                "template": {
                    "$ref": "common.schema.json#/definitions/StringTemplate"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "template"
            ]
        },
        "ResultHandling": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$ResultHandling"
                },
                "importMappingCall": {
                    "type": "null"
                },
                "storeInVariable": {
                    "type": "boolean"
                },
                "outputVariableName": {
                    "type": "string"
                },
                "variableType": {
                    "$ref": "#/definitions/VariableType"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "storeInVariable",
                "outputVariableName",
                "variableType"
            ]
        },
        "ExpressionSplitCondition": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "const": "Microflows$ExpressionSplitCondition"
                },
                "expression": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "expression"
            ]
        },
        "ObjectCollection": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$MicroflowObjectCollection"
                    ]
                },
                "objects": {
                    "type": "array",
                    "description": "Objects of the object collection",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "description": "can only have one start event in a microflow",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$MicroflowParameterObject"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "variableType": {
                                        "type": "object",
                                        "properties": {
                                            "$ID": {
                                                "type": "string"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "enum": [
                                                    "DataTypes$ObjectType"
                                                ]
                                            },
                                            "entity": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "$ID",
                                            "$Type",
                                            "entity"
                                        ]
                                    },
                                    "documentation": {
                                        "type": "string"
                                    },
                                    "hasVariableNameBeenChanged": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size"
                                ]
                            },
                            {
                                "type": "object",
                                "description": "can only have one start event in a microflow",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$StartEvent"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size"
                                ]
                            },
                            {
                                "type": "object",
                                "description": "can have multiple end events in a microflow, atleast one",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$EndEvent"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "returnValue": {
                                        "type": "string"
                                    },
                                    "documentation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size",
                                    "returnValue",
                                    "documentation"
                                ]
                            },
                            {
                                "type": "object",
                                "description": "can have multiple action activities in a microflow",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$ActionActivity"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "action": {
                                        "$ref": "#/definitions/Action"
                                    },
                                    "disabled": {
                                        "type": "boolean"
                                    },
                                    "caption": {
                                        "type": "string",
                                        "description": "Caption of the action"
                                    },
                                    "autoGenerateCaption": {
                                        "type": "boolean"
                                    },
                                    "backgroundColor": {
                                        "type": "string",
                                        "enum": [
                                            "Default"
                                        ]
                                    },
                                    "documentation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size",
                                    "action",
                                    "disabled",
                                    "caption",
                                    "autoGenerateCaption",
                                    "backgroundColor",
                                    "documentation"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$ExclusiveSplit"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "splitCondition": {
                                        "$ref": "#/definitions/ExpressionSplitCondition"
                                    },
                                    "caption": {
                                        "type": "string",
                                        "description": "Caption of the action"
                                    },
                                    "errorHandlingType": {
                                        "$ref": "#/definitions/ErrorHandlingType"
                                    },
                                    "documentation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size",
                                    "splitCondition",
                                    "caption",
                                    "errorHandlingType",
                                    "documentation"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/GUID"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "const": "Microflows$ExclusiveMerge"
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/GUID"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "const": "Microflows$Annotation"
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "caption": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size",
                                    "caption"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/GUID"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "const": "Microflows$ErrorEvent"
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "enum": [
                                            "Microflows$LoopedActivity"
                                        ]
                                    },
                                    "relativeMiddlePoint": {
                                        "$ref": "#/definitions/RelativePoint"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/Size"
                                    },
                                    "errorHandlingType": {
                                        "$ref": "#/definitions/ErrorHandlingType"
                                    },
                                    "documentation": {
                                        "type": "string"
                                    },
                                    "loopSource": {
                                        "type": "object",
                                        "properties": {
                                            "$ID": {
                                                "$ref": "common.schema.json#/definitions/Identifiable"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "enum": [
                                                    "Microflows$WhileLoopCondition"
                                                ]
                                            },
                                            "whileExpression": {
                                                "type": "string",
                                                "examples": [
                                                    "$currentUser/Active"
                                                ]
                                            },
                                            "caption": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "objectCollection": {
                                        "$ref": "#/definitions/ObjectCollection"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "relativeMiddlePoint",
                                    "size",
                                    "errorHandlingType",
                                    "documentation",
                                    "loopSource",
                                    "objectCollection"
                                ]
                            }
                        ]
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "objects"
            ]
        }
    },
    "type": "object",
    "properties": {
        "$ID": {
            "$ref": "common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
            "type": "string",
            "enum": [
                "Microflows$Microflow"
            ]
        },
        "name": {
            "type": "string",
            "description": "Name of the microflow"
        },
        "documentation": {
            "type": "string",
            "description": "Documentation of the microflow"
        },
        "excluded": {
            "type": "boolean",
            "description": "Indicates if the microflow is excluded"
        },
        "exportLevel": {
            "type": "string",
            "enum": [
                "Hidden"
            ],
            "description": "Export level of the microflow"
        },
        "objectCollection": {
            "$ref": "#/definitions/ObjectCollection"
        },
        "flows": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/MicroflowFlow"
            }
        },
        "microflowReturnType": {
            "$ref": "#/definitions/ReturnType"
        },
        "markAsUsed": {
            "type": "boolean"
        },
        "returnVariableName": {
            "type": "string"
        },
        "applyEntityAccess": {
            "type": "boolean"
        },
        "allowedModuleRoles": {
            "type": "array",
            "items": {}
        },
        "microflowActionInfo": {
            "type": [
                "null",
                "object"
            ]
        },
        "workflowActionInfo": {
            "type": [
                "null",
                "object"
            ]
        },
        "allowConcurrentExecution": {
            "type": "boolean",
            "description": "when false, need define either concurrencyErrorMessage or concurrencyErrorMicroflow"
        },
        "concurrencyErrorMessage": {
            "$ref": "common.schema.json#/definitions/Text"
        },
        "concurrencyErrorMicroflow": {
            "type": [
                "null",
                "object"
            ]
        },
        "url": {
            "type": "string"
        },
        "urlSearchParameters": {
            "type": "array",
            "items": {}
        },
        "stableId": {
            "$ref": "common.schema.json#/definitions/GUID"
        }
    },
    "required": [
        "$ID",
        "$Type",
        "name",
        "documentation",
        "excluded",
        "exportLevel",
        "objectCollection",
        "flows",
        "microflowReturnType",
        "markAsUsed",
        "returnVariableName",
        "applyEntityAccess",
        "allowedModuleRoles",
        "microflowActionInfo",
        "workflowActionInfo",
        "allowConcurrentExecution",
        "concurrencyErrorMessage",
        "concurrencyErrorMicroflow",
        "url",
        "urlSearchParameters",
        "stableId"
    ]
}