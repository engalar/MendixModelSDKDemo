{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Common Structure Schema for mendix model",
    "definitions": {
        "TemplateArgument": {
            "type": "object",
            "description": "string template interpolation argument",
            "properties": {
                "$ID": {
                    "$ref": "#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$TemplateArgument"
                    ]
                },
                "expression": {
                    "type": "string",
                    "examples": [
                        "$currentUser/Name\n"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "expression"
            ]
        },
        "StringTemplate": {
            "type": "object",
            "description": "string template",
            "properties": {
                "$ID": {
                    "$ref": "#/definitions/Identifiable"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Microflows$StringTemplate"
                    ]
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemplateArgument"
                    },
                    "default": []
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "arguments",
                "text"
            ]
        },
        "QualifiedName": {
            "type": "string",
            "description": "QualifiedName of the document e.g. microflow page entity",
            "examples": [
                "System.User",
                "MyFirstModule.Java_action"
            ]
        },
        "AttributeQualifiedName": {
            "type": "string",
            "description": "QualifiedName of the document e.g. microflow page entity",
            "examples": [
                "System.User",
                "MyFirstModule.MyEntity.MyAttribute"
            ]
        },
        "entityRef": {
            "type": [
                "object",
                "null"
            ],
            "properties": {
                "$ID": {
                    "$ref": "#/definitions/GUID"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'DomainModels$DirectEntityRef'.",
                    "const": "DomainModels$DirectEntityRef"
                },
                "entity": {
                    "$ref": "#/definitions/EntityQualifiedName"
                }
            }
        },
        "EntityQualifiedName": {
            "type": "string",
            "description": "Entity qualified name. moduleName.entityName",
            "examples": [
                "System.User"
            ]
        },
        "AttributeRef": {
            "type": "object",
            "description": "Reference to attribute.",
            "properties": {
                "$ID": {
                    "$ref": "#/definitions/GUID"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                    "const": "DomainModels$AttributeRef"
                },
                "entityRef": {
                    "$ref": "#/definitions/entityRef"
                },
                "attribute": {
                    "type": "string",
                    "description": "Reference to the attribute. compose with module name entity name and attribute name. moduleName.entityName.attributeName",
                    "examples": [
                        "System.XASInstance.XASId"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "attribute"
            ]
        },
        "Identifiable": {
            "type": "string",
            "description": "Unique identifier. use for placeholer uniqe identifier for human readable name and later will replace with guid by model sdk"
        },
        "Location": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            },
            "required": [
                "x",
                "y"
            ]
        },
        "GUID": {
            "type": "string",
            "pattern": "[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}",
            "description": "GUID of the object"
        },
        "Translation": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "#/definitions/GUID"
                },
                "$Type": {
                    "type": "string",
                    "const": "Texts$Translation"
                },
                "languageCode": {
                    "type": "string",
                    "description": "Language code for the translation",
                    "enum": [
                        "en_US",
                        "zh_CN",
                        "zh_TW"
                    ]
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "languageCode",
                "text"
            ]
        },
        "Text": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string"
                },
                "$Type": {
                    "type": "string",
                    "enum": [
                        "Texts$Text"
                    ]
                },
                "translations": {
                    "type": "array",
                    "description": "List of translations for the text.",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/Translation"
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "translations"
            ]
        }
    }
}