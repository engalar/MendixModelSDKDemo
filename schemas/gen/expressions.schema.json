{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Expression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$Expression"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ]
    },
    "BinaryExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$BinaryExpression"
        },
        "operator": {
          "type": "string",
          "enum": [
            "None",
            "And",
            "Or",
            "Equals",
            "NotEquals",
            "GreaterThan",
            "LessThan",
            "GreaterThanOrEqual",
            "LessThanOrEqual",
            "Minus",
            "Plus",
            "Multiply",
            "Divide",
            "Div",
            "Mod"
          ]
        },
        "left": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        },
        "right": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "left",
        "right"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$BinaryExpression"
              }
            }
          }
        }
      ]
    },
    "LiteralExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$LiteralExpression"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$LiteralExpression"
              }
            }
          }
        }
      ]
    },
    "BooleanLiteral": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$BooleanLiteral"
        },
        "value": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/LiteralExpression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$BooleanLiteral"
              }
            }
          }
        }
      ]
    },
    "ConstantRefExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$ConstantRefExpression"
        },
        "constant": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "constant"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$ConstantRefExpression"
              }
            }
          }
        }
      ]
    },
    "EmptyLiteral": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$EmptyLiteral"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/LiteralExpression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$EmptyLiteral"
              }
            }
          }
        }
      ]
    },
    "EnumerationValueRefExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$EnumerationValueRefExpression"
        },
        "value": {
          "type": "string",
          "description": "ByNameReferenceProperty: enumerations.schema.json#/definitions/EnumerationValue"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "value"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$EnumerationValueRefExpression"
              }
            }
          }
        }
      ]
    },
    "FloatLiteral": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$FloatLiteral"
        },
        "value": {
          "type": "number",
          "default": 0
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/LiteralExpression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$FloatLiteral"
              }
            }
          }
        }
      ]
    },
    "FunctionCallExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$FunctionCallExpression"
        },
        "functionName": {
          "type": "string",
          "default": ""
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionWithSubclasses"
          }
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$FunctionCallExpression"
              }
            }
          }
        }
      ]
    },
    "VariableRef": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$VariableRef"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ]
    },
    "GlobalVariableRef": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$GlobalVariableRef"
        },
        "referredName": {
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/VariableRef"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$GlobalVariableRef"
              }
            }
          }
        }
      ]
    },
    "IfExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$IfExpression"
        },
        "condition": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        },
        "ifTrue": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        },
        "ifFalse": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "condition",
        "ifTrue",
        "ifFalse"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$IfExpression"
              }
            }
          }
        }
      ]
    },
    "IntegerLiteral": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$IntegerLiteral"
        },
        "value": {
          "type": "integer",
          "default": 0
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/LiteralExpression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$IntegerLiteral"
              }
            }
          }
        }
      ]
    },
    "NoExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$NoExpression"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$NoExpression"
              }
            }
          }
        }
      ]
    },
    "NoVariableRef": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$NoVariableRef"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/VariableRef"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$NoVariableRef"
              }
            }
          }
        }
      ]
    },
    "ParenthesisExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$ParenthesisExpression"
        },
        "expression": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "expression"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$ParenthesisExpression"
              }
            }
          }
        }
      ]
    },
    "StringLiteral": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$StringLiteral"
        },
        "value": {
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/LiteralExpression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$StringLiteral"
              }
            }
          }
        }
      ]
    },
    "UnaryExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$UnaryExpression"
        },
        "operator": {
          "type": "string",
          "enum": [
            "None",
            "UnaryMinus"
          ]
        },
        "expression": {
          "$ref": "#/definitions/ExpressionWithSubclasses"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "expression"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$UnaryExpression"
              }
            }
          }
        }
      ]
    },
    "UnparsableExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$UnparsableExpression"
        },
        "expression": {
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$UnparsableExpression"
              }
            }
          }
        }
      ]
    },
    "VariableRefExpression": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Expressions$VariableRefExpression"
        },
        "variable": {
          "$ref": "#/definitions/VariableRefWithSubclasses"
        },
        "member": {
          "$ref": "domainmodels.schema.json#/definitions/MemberRef"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "variable"
      ],
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "#/definitions/Expression"
            },
            "with": {
              "$Type": {
                "type": "string",
                "const": "Expressions$VariableRefExpression"
              }
            }
          }
        }
      ]
    },
    "ExpressionWithSubclasses": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/Expression"
        },
        {
          "$ref": "#/definitions/BinaryExpression"
        },
        {
          "$ref": "#/definitions/LiteralExpression"
        },
        {
          "$ref": "#/definitions/ConstantRefExpression"
        },
        {
          "$ref": "#/definitions/EnumerationValueRefExpression"
        },
        {
          "$ref": "#/definitions/FunctionCallExpression"
        },
        {
          "$ref": "#/definitions/IfExpression"
        },
        {
          "$ref": "#/definitions/NoExpression"
        },
        {
          "$ref": "#/definitions/ParenthesisExpression"
        },
        {
          "$ref": "#/definitions/UnaryExpression"
        },
        {
          "$ref": "#/definitions/UnparsableExpression"
        },
        {
          "$ref": "#/definitions/VariableRefExpression"
        }
      ]
    },
    "VariableRefWithSubclasses": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/VariableRef"
        },
        {
          "$ref": "#/definitions/GlobalVariableRef"
        },
        {
          "$ref": "#/definitions/NoVariableRef"
        }
      ]
    }
  }
}