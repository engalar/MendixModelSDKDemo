{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ConsumedKafkaService": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$ConsumedKafkaService"
        },
        "serviceFeed": {
          "type": "string",
          "default": ""
        },
        "metadataReferences": {
          "type": "array",
          "items": {
            "$ref": "rest.schema.json#/definitions/MetadataReference"
          }
        },
        "brokerUrl": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        },
        "brokerUsername": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        },
        "brokerPassword": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$ref": "domainmodels.schema.json#/definitions/RemoteEntitySourceDocument"
        }
      ]
    },
    "KafkaMappedValue": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$KafkaMappedValue"
        },
        "remoteName": {
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$ref": "domainmodels.schema.json#/definitions/CachedMappedValue"
        }
      ]
    },
    "KafkaRemoteEntitySource": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$KafkaRemoteEntitySource"
        },
        "remoteName": {
          "type": "string",
          "default": ""
        },
        "topicName": {
          "type": "string",
          "default": ""
        },
        "sourceDocument": {
          "type": "string",
          "description": "ByNameReferenceProperty: #/definitions/ConsumedKafkaService"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$ref": "domainmodels.schema.json#/definitions/MaterializedRemoteEntitySource"
        }
      ]
    },
    "PublishedKafkaResource": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$PublishedKafkaResource"
        },
        "exposedName": {
          "type": "string",
          "default": ""
        },
        "summary": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "entity": {
          "type": "string",
          "description": "ByNameReferenceProperty: domainmodels.schema.json#/definitions/Entity"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublishedKafkaResourceAttribute"
          }
        }
      },
      "required": [
        "$ID",
        "$Type",
        "entity"
      ]
    },
    "PublishedKafkaResourceAttribute": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$PublishedKafkaResourceAttribute"
        },
        "exposedName": {
          "type": "string",
          "default": ""
        },
        "summary": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "attribute": {
          "type": "string",
          "description": "ByNameReferenceProperty: domainmodels.schema.json#/definitions/Attribute"
        }
      },
      "required": [
        "$ID",
        "$Type",
        "attribute"
      ]
    },
    "PublishedKafkaService": {
      "type": "object",
      "properties": {
        "$ID": {
          "$ref": "../common.schema.json#/definitions/Identifiable"
        },
        "$Type": {
          "type": "string",
          "const": "Kafka$PublishedKafkaService"
        },
        "namespace": {
          "type": "string",
          "default": "DefaultNamespace"
        },
        "serviceFeed": {
          "type": "string",
          "default": ""
        },
        "metadata": {
          "type": "string",
          "default": ""
        },
        "serviceName": {
          "type": "string",
          "default": ""
        },
        "version": {
          "type": "string",
          "default": "1.0.0"
        },
        "summary": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublishedKafkaResource"
          }
        },
        "brokerUrl": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        },
        "brokerUsername": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        },
        "brokerPassword": {
          "type": "string",
          "description": "ByNameReferenceProperty: constants.schema.json#/definitions/Constant"
        }
      },
      "required": [
        "$ID",
        "$Type"
      ],
      "allOf": [
        {
          "$ref": "projects.schema.json#/definitions/Document"
        }
      ]
    }
  }
}