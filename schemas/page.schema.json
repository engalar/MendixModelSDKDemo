{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Pages$Page",
    "description": "Schema for a Mendix Page object",
    "type": "object",
    "definitions": {
        "CustomWidget": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the custom widget"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$CustomWidget'.",
                            "const": "Pages$CustomWidget"
                        }
                    }
                }
            ]
        },
        "GridColumn": {
            "type": "object",
            "description": "Datagrid column.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the datagrid column"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$GridColumn'.",
                    "const": "Pages$GridColumn"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the column."
                },
                "caption": {
                    "$ref": "#/definitions/Text"
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to the attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute."
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "formattingInfo": {
                    "type": "object",
                    "description": "Formatting rules of the column",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the formatting information."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$FormattingInfo'.",
                            "const": "Pages$FormattingInfo"
                        },
                        "decimalPrecision": {
                            "type": "integer",
                            "description": "Decimal precision to use."
                        },
                        "groupDigits": {
                            "type": "boolean",
                            "description": "Indicates if numbers should be grouped"
                        },
                        "enumFormat": {
                            "type": "string",
                            "description": "Enum format.",
                            "enum": [
                                "Text",
                                "Key",
                                "Image",
                                "Value"
                            ]
                        },
                        "dateFormat": {
                            "type": "string",
                            "description": "Date format to be used.",
                            "enum": [
                                "Date",
                                "DateTime",
                                "Time"
                            ]
                        },
                        "customDateFormat": {
                            "type": "string",
                            "description": "Custom date format to be used if applicable."
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "decimalPrecision",
                        "groupDigits",
                        "enumFormat",
                        "dateFormat",
                        "customDateFormat"
                    ]
                },
                "showTooltip": {
                    "type": "boolean",
                    "description": "Boolean to indicate if tooltip should be shown."
                },
                "aggregateCaption": {
                    "$ref": "#/definitions/Text"
                },
                "aggregateFunction": {
                    "type": "string",
                    "description": "Aggregation function to use for the column.",
                    "enum": [
                        "None",
                        "Sum",
                        "Average",
                        "Min",
                        "Max",
                        "Count"
                    ]
                },
                "editable": {
                    "type": "boolean",
                    "description": "Boolean to indicate if column is editable."
                },
                "width": {
                    "type": "integer",
                    "description": "Width of the column."
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "caption",
                "attributeRef",
                "formattingInfo",
                "showTooltip",
                "aggregateCaption",
                "aggregateFunction",
                "editable",
                "width",
                "appearance"
            ]
        },
        "GridControlBar": {
            "type": "object",
            "description": "Settings for the control bar.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the control bar"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$GridControlBar'.",
                    "const": "Pages$GridControlBar"
                },
                "items": {
                    "type": "array",
                    "description": "List of items in the control bar.",
                    "items": {
                        "oneOf": [
                            {
                                "type": "object",
                                "description": "Grid search button.",
                                "properties": {
                                    "$ID": {
                                        "type": "string",
                                        "description": "Unique identifier of the search button."
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'Pages$GridSearchButton'.",
                                        "const": "Pages$GridSearchButton"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the widget"
                                    },
                                    "caption": {
                                        "$ref": "#/definitions/ClientTemplate"
                                    },
                                    "tooltip": {
                                        "$ref": "#/definitions/Text"
                                    },
                                    "icon": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Icon to be displayed on the button",
                                        "properties": {
                                            "$ID": {
                                                "type": "string",
                                                "description": "Unique identifier of the Icon"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "description": "Type of the object, should be 'Pages$ImageIcon' or 'Pages$GlyphIcon'",
                                                "enum": [
                                                    "Pages$ImageIcon",
                                                    "Pages$GlyphIcon"
                                                ]
                                            }
                                        }
                                    },
                                    "appearance": {
                                        "$ref": "#/definitions/Appearance"
                                    },
                                    "conditionalVisibilitySettings": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Settings for conditional visibility"
                                    },
                                    "buttonStyle": {
                                        "type": "string",
                                        "description": "Style of the button.",
                                        "enum": [
                                            "Default",
                                            "Primary",
                                            "Success",
                                            "Info",
                                            "Warning",
                                            "Danger",
                                            "Link"
                                        ]
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "name",
                                    "caption",
                                    "tooltip",
                                    "appearance",
                                    "conditionalVisibilitySettings",
                                    "buttonStyle"
                                ]
                            },
                            {
                                "type": "object",
                                "description": "Grid select button",
                                "properties": {
                                    "$ID": {
                                        "type": "string",
                                        "description": "Unique identifier of the select button."
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'Pages$SelectButton'.",
                                        "const": "Pages$SelectButton"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the widget"
                                    },
                                    "caption": {
                                        "$ref": "#/definitions/ClientTemplate"
                                    },
                                    "tooltip": {
                                        "$ref": "#/definitions/Text"
                                    },
                                    "icon": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Icon to be displayed on the button",
                                        "properties": {
                                            "$ID": {
                                                "type": "string",
                                                "description": "Unique identifier of the Icon"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "description": "Type of the object, should be 'Pages$ImageIcon' or 'Pages$GlyphIcon'",
                                                "enum": [
                                                    "Pages$ImageIcon",
                                                    "Pages$GlyphIcon"
                                                ]
                                            }
                                        }
                                    },
                                    "appearance": {
                                        "$ref": "#/definitions/Appearance"
                                    },
                                    "conditionalVisibilitySettings": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Settings for conditional visibility."
                                    },
                                    "buttonStyle": {
                                        "type": "string",
                                        "description": "Style of the button.",
                                        "enum": [
                                            "Default",
                                            "Primary",
                                            "Success",
                                            "Info",
                                            "Warning",
                                            "Danger",
                                            "Link"
                                        ]
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "name",
                                    "caption",
                                    "tooltip",
                                    "appearance",
                                    "conditionalVisibilitySettings",
                                    "buttonStyle"
                                ]
                            },
                            {
                                "$ref": "#/definitions/GridActionButton"
                            }
                        ]
                    }
                },
                "defaultButton": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Reference to the default button."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "items"
            ]
        },
          "ComparisonSearchField": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the search field"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$ComparisonSearchField'.",
                    "const": "Pages$ComparisonSearchField"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the search field"
                },
                "caption": {
                   "$ref": "#/definitions/Text"
                },
                "placeholder": {
                   "$ref": "#/definitions/Text"
                },
                 "customDateFormat": {
                    "type": "string",
                    "description": "Custom date format to be used."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the search field",
                    "enum": [
                        "Normal",
                        "Date",
                         "DateTime",
                         "Time",
                         "DatePart"
                    ]
                },
                 "defaultValue": {
                    "type": "string",
                    "description": "Default value of the search field."
                },
                "attributeRef": {
                     "type": "object",
                    "description": "Reference to attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                             "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "operator": {
                    "type": "string",
                    "description": "Operator of the search field.",
                    "enum": [
                         "Equal",
                         "NotEqual",
                         "Greater",
                         "GreaterOrEqual",
                         "Less",
                         "LessOrEqual",
                         "Contains"
                    ]
                }
            },
             "required": [
                "$ID",
                "$Type",
                "name",
                "caption",
                "placeholder",
                "customDateFormat",
                "type",
                "defaultValue",
                "attributeRef",
                "operator"
            ]
        },
        "SearchBar": {
            "type": "object",
            "description": "Settings for the search bar.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the search bar."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$SearchBar'.",
                    "const": "Pages$SearchBar"
                },
                "items": {
                    "type": "array",
                    "description": "List of search fields.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the search bar.",
                    "enum": [
                        "None",
                        "FoldableOpen",
                        "FoldableClosed",
                        "AlwaysVisible"
                    ]
                },
                "waitForSearch": {
                    "type": "boolean",
                    "description": "Boolean to indicate whether the grid should wait for search"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "items",
                "type",
                "waitForSearch"
            ]
        },
        "GridSortBar": {
            "type": "object",
            "description": "Settings for the sort bar.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the sort bar"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$GridSortBar'.",
                    "const": "Pages$GridSortBar"
                },
                "sortItems": {
                    "type": "array",
                    "description": "List of sort items.",
                    "items": {
                        "type": "object",
                        "description": "Placeholder for sort item.",
                        "properties": {
                            "$ID": {
                                "type": "string",
                                "description": "Unique identifier of the sort item"
                            },
                            "$Type": {
                                "type": "string",
                                "description": "Type of the object, should be 'Pages$GridSortItem'.",
                                "const": "Pages$GridSortItem"
                            },
                            "attributeRef": {
                                "type": "object",
                                "description": "Reference to the attribute",
                                "properties": {
                                    "$ID": {
                                        "type": "string",
                                        "description": "Unique identifier of the AttributeRef."
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                                        "const": "DomainModels$AttributeRef"
                                    },
                                    "entityRef": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Entity reference"
                                    },
                                    "attribute": {
                                        "type": "string",
                                        "description": "Reference to the attribute"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "attribute"
                                ]
                            },
                            "sortDirection": {
                                "type": "string",
                                "description": "Direction of sort.",
                                "enum": [
                                    "Ascending",
                                    "Descending"
                                ]
                            }
                        },
                        "required": [
                            "$ID",
                            "$Type",
                            "attributeRef",
                            "sortDirection"
                        ]
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "sortItems"
            ]
        },
        "DataGrid": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the datagrid"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$DataGrid'.",
                    "const": "Pages$DataGrid"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional Visibility Settings"
                },
                "dataSource": {
                    "type": "object",
                    "description": "Data source of the DataGrid widget.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Data source"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridXPathSource'.",
                            "const": "Pages$GridXPathSource"
                        },
                        "forceFullObjects": {
                            "type": "boolean",
                            "description": "Boolean to specify whether data should be full objects."
                        },
                        "entityRef": {
                            "type": "object",
                            "description": "Entity reference for the grid",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the entity ref"
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'DomainModels$DirectEntityRef'",
                                    "const": "DomainModels$DirectEntityRef"
                                },
                                "entity": {
                                    "type": "string",
                                    "description": "Name of the entity"
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "entity"
                            ]
                        },
                        "sourceVariable": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Source variable of the grid"
                        },
                        "sortBar": {
                            "$ref": "#/definitions/GridSortBar"
                        },
                        "searchBar": {
                            "$ref": "#/definitions/SearchBar"
                        },
                        "xPathConstraint": {
                            "type": "string",
                            "description": "XPath constraint to use"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "forceFullObjects",
                        "entityRef",
                        "sortBar",
                        "searchBar",
                        "xPathConstraint"
                    ]
                },
                "isControlBarVisible": {
                    "type": "boolean",
                    "description": "Indicates if the control bar is visible."
                },
                "showPagingBar": {
                    "type": "string",
                    "description": "Indicates when the paging bar should be visible.",
                    "enum": [
                        "No",
                        "Yes",
                        "YesWithTotalCount"
                    ]
                },
                "selectionMode": {
                    "type": "string",
                    "description": "Selection mode of the grid.",
                    "enum": [
                        "None",
                        "Single",
                        "SimpleMulti",
                        "ExtendedMulti"
                    ]
                },
                "selectFirst": {
                    "type": "boolean",
                    "description": "Boolean to specify if the first row should be selected"
                },
                "defaultButtonTrigger": {
                    "type": "string",
                    "description": "Default button trigger",
                    "enum": [
                        "Single",
                        "Double"
                    ]
                },
                "refreshTime": {
                    "type": "integer",
                    "description": "Refresh time of the grid"
                },
                "controlBar": {
                    "$ref": "#/definitions/GridControlBar"
                },
                "columns": {
                    "type": "array",
                    "description": "Columns within the DataGrid.",
                    "items": {
                        "$ref": "#/definitions/GridColumn"
                    }
                },
                "numberOfRows": {
                    "type": "integer",
                    "description": "Number of rows to be displayed in the grid"
                },
                "showEmptyRows": {
                    "type": "boolean",
                    "description": "Boolean to specify if empty rows should be shown"
                },
                "widthUnit": {
                    "type": "string",
                    "description": "Width unit of the grid",
                    "enum": [
                        "Weight",
                        "Pixels"
                    ]
                },
                "tooltipPage": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Page to be opened as tooltip."
                },
                "caption": {
                    "$ref": "#/definitions/ClientTemplate"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "dataSource",
                "isControlBarVisible",
                "showPagingBar",
                "selectionMode",
                "selectFirst",
                "defaultButtonTrigger",
                "refreshTime",
                "controlBar",
                "columns",
                "numberOfRows",
                "showEmptyRows",
                "widthUnit",
                "tooltipPage",
                "caption"
            ]
        },
        "Label": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$Label'",
                    "const": "Pages$Label"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "caption": {
                    "$ref": "#/definitions/Text"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "caption"
            ]
        },
        "CheckBox": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$CheckBox'",
                    "const": "Pages$CheckBox"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional editability settings."
                },
                "editable": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "labelTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "screenReaderLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Label for screen readers."
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode.",
                    "enum": [
                        "Inherit",
                        "Control"
                    ]
                },
                "validation": {
                    "type": "object",
                    "description": "Validation rules for the checkbox.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the validation"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$WidgetValidation'.",
                            "const": "Pages$WidgetValidation"
                        },
                        "expression": {
                            "type": "string",
                            "description": "Boolean expression to be checked for validation"
                        },
                        "message": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "expression",
                        "message"
                    ]
                },
                "onChangeAction": {
                    "type": "object",
                    "description": "Settings for on change action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onEnterAction": {
                    "type": "object",
                    "description": "Settings for on enter action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onLeaveAction": {
                    "type": "object",
                    "description": "Settings for on leave action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the widget."
                },
                "ariaRequired": {
                    "type": "boolean",
                    "description": "Indicates if this widget is required for aria"
                },
                "labelPosition": {
                    "type": "string",
                    "description": "Specifies where the label should be rendered",
                    "enum": [
                        "Default",
                        "Left",
                        "Top"
                    ]
                },
                "nativeRenderMode": {
                    "type": "string",
                    "description": "Native render mode of this checkbox",
                    "enum": [
                        "Switch",
                        "CheckBox"
                    ]
                },
                "nativeAccessibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Native accessibility settings of the widget"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "conditionalEditabilitySettings",
                "editable",
                "labelTemplate",
                "screenReaderLabel",
                "attributeRef",
                "readOnlyStyle",
                "validation",
                "onChangeAction",
                "onEnterAction",
                "onLeaveAction",
                "sourceVariable",
                "ariaRequired",
                "labelPosition",
                "nativeRenderMode",
                "nativeAccessibilitySettings"
            ]
        },
        "BuildinWidget": {
            "oneOf": [
                {
                    "$ref": "#/definitions/ComparisonSearchField"
                },
                {
                    "$ref": "#/definitions/DropDownSearchField"
                },
                {
                    "$ref": "#/definitions/LayoutGrid"
                },
                {
                    "$ref": "#/definitions/DivContainer"
                },
                {
                    "$ref": "#/definitions/DataView"
                },
                {
                    "$ref": "#/definitions/DynamicText"
                },
                {
                    "$ref": "#/definitions/DataGrid"
                },
                {
                    "$ref": "#/definitions/TextBox"
                },
                {
                    "$ref": "#/definitions/Label"
                },
                {
                    "$ref": "#/definitions/InputReferenceSetSelector"
                },
                {
                    "$ref": "#/definitions/CheckBox"
                },
                {
                    "$ref": "#/definitions/ReferenceSelector"
                },
                {
                    "$ref": "#/definitions/ActionButton"
                },
                {
                    "$ref": "#/definitions/LayoutGridColumn"
                },
                {
                    "$ref": "#/definitions/RadioButtonGroup"
                },
                {
                    "$ref": "#/definitions/TabContainer"
                },
                {
                    "$ref": "#/definitions/GridControlBar"
                },
                {
                    "$ref": "#/definitions/GridActionButton"
                }
            ]
        },
        "Widget": {
            "oneOf": [
                {
                    "$ref": "#/definitions/BuildinWidget"
                },
                {
                    "$ref": "#/definitions/CustomWidget"
                }
            ]
        },
        "GridActionButton": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the grid action button."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$GridActionButton'.",
                    "const": "Pages$GridActionButton"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "caption": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "tooltip": {
                    "$ref": "#/definitions/Text"
                },
                "icon": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Icon to be displayed on the button",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Icon"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$ImageIcon' or 'Pages$GlyphIcon'",
                            "enum": [
                                "Pages$ImageIcon",
                                "Pages$GlyphIcon"
                            ]
                        }
                    }
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional visibility settings."
                },
                "buttonStyle": {
                    "type": "string",
                    "description": "Style of the button.",
                    "enum": [
                        "Default",
                        "Primary",
                        "Success",
                        "Info",
                        "Warning",
                        "Danger",
                        "Link"
                    ]
                },
                "action": {
                    "type": "object",
                    "description": "Action when button is clicked",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Client action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$DeleteClientAction'.",
                            "const": "Pages$DeleteClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        },
                        "closePage": {
                            "type": "boolean",
                            "description": "Boolean to specify if page should be closed"
                        },
                        "sourceVariable": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Source variable for the delete action."
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution",
                        "closePage"
                    ]
                },
                "maintainSelectionAfterMicroflow": {
                    "type": "boolean",
                    "description": "Indicates whether selection should be maintained after microflow."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "caption",
                "tooltip",
                "icon",
                "appearance",
                "conditionalVisibilitySettings",
                "buttonStyle",
                "action",
                "maintainSelectionAfterMicroflow"
            ]
        },
        "TabContainer": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the tab container"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$TabContainer'",
                    "const": "Pages$TabContainer"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "tabPages": {
                    "type": "array",
                    "description": "List of tab pages",
                    "items": {
                        "type": "object",
                        "description": "Tab page object",
                        "properties": {
                            "$ID": {
                                "type": "string",
                                "description": "Unique identifier of the tab page."
                            },
                            "$Type": {
                                "type": "string",
                                "description": "Type of the object, should be 'Pages$TabPage'",
                                "const": "Pages$TabPage"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the tab page."
                            },
                            "caption": {
                                "$ref": "#/definitions/Text"
                            },
                            "refreshOnShow": {
                                "type": "boolean",
                                "description": "Boolean to specify if page should refresh on show."
                            },
                            "conditionalVisibilitySettings": {
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "description": "Settings for conditional visibility of tab page"
                            },
                            "widgets": {
                                "type": "array",
                                "description": "List of widgets within this tab page.",
                                "items": {
                                    "type": "object",
                                    "description": "Widget object, refer to widget definitions for properties"
                                }
                            },
                            "badge": {
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "description": "Badge of the tab page"
                            }
                        },
                        "required": [
                            "$ID",
                            "$Type",
                            "name",
                            "caption",
                            "refreshOnShow",
                            "conditionalVisibilitySettings",
                            "widgets",
                            "badge"
                        ]
                    }
                },
                "defaultPage": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Default selected tab page."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "tabPages",
                "defaultPage"
            ]
        },
        "Identifiable": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the object"
                }
            },
            "required": [
                "$ID"
            ]
        },
        "Appearance": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the appearance"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the appearance object, should be 'Pages$Appearance'",
                    "const": "Pages$Appearance"
                },
                "class": {
                    "type": "string",
                    "description": "CSS class of the object"
                },
                "style": {
                    "type": "string",
                    "description": "Inline style for the object"
                },
                "designProperties": {
                    "type": "array",
                    "description": "Design properties for the object",
                    "items": {
                        "type": "object",
                        "description": "Design property value",
                        "properties": {
                            "$ID": {
                                "type": "string",
                                "description": "Unique identifier of the design property."
                            },
                            "$Type": {
                                "type": "string",
                                "description": "Type of the object, should be 'Pages$DesignPropertyValue'.",
                                "const": "Pages$DesignPropertyValue"
                            },
                            "key": {
                                "type": "string",
                                "description": "Key for the design property."
                            },
                            "value": {
                                "type": "object",
                                "description": "Value of the design property.",
                                "properties": {
                                    "$ID": {
                                        "type": "string",
                                        "description": "Unique identifier of the option design property value."
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'Pages$OptionDesignPropertyValue'.",
                                        "const": "Pages$OptionDesignPropertyValue"
                                    },
                                    "option": {
                                        "type": "string",
                                        "description": "Option value for the design property"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "option"
                                ]
                            }
                        },
                        "required": [
                            "$ID",
                            "$Type",
                            "key",
                            "value"
                        ]
                    }
                },
                "dynamicClasses": {
                    "type": "string",
                    "description": "Dynamic classes for the object."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "class",
                "style",
                "designProperties",
                "dynamicClasses"
            ]
        },
        "Text": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the text."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the text object, should be 'Texts$Text'",
                    "const": "Texts$Text"
                },
                "translations": {
                    "type": "array",
                    "description": "List of translations for the text.",
                    "items": {
                        "type": "object",
                        "description": "Text translation object.",
                        "properties": {
                            "$ID": {
                                "type": "string",
                                "description": "Unique identifier of the translation"
                            },
                            "$Type": {
                                "type": "string",
                                "description": "Type of the object, should be 'Texts$Translation'",
                                "const": "Texts$Translation"
                            },
                            "languageCode": {
                                "type": "string",
                                "description": "Language code for the translation"
                            },
                            "text": {
                                "type": "string",
                                "description": "Translated text"
                            }
                        },
                        "required": [
                            "$ID",
                            "$Type",
                            "languageCode",
                            "text"
                        ]
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "translations"
            ]
        },
        "DropDownSearchField": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the dropdown search field"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$DropDownSearchField'.",
                    "const": "Pages$DropDownSearchField"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "caption": {
                    "$ref": "#/definitions/Text"
                },
                "placeholder": {
                    "$ref": "#/definitions/Text"
                },
                "customDateFormat": {
                    "type": "string",
                    "description": "Custom date format."
                },
                "type": {
                    "type": "string",
                    "description": "Type of search field",
                    "enum": [
                        "Normal",
                        "Date",
                        "DateTime"
                    ]
                },
                "defaultValue": {
                    "type": "string",
                    "description": "Default value for the search field"
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "operator": {
                    "type": "string",
                    "description": "Operator used in search query",
                    "enum": [
                        "Equal",
                        "NotEqual",
                        "Greater",
                        "GreaterOrEqual",
                        "Less",
                        "LessOrEqual",
                        "Contains"
                    ]
                },
                "sortBar": {
                    "type": "object",
                    "description": "Settings for the sort bar",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Grid sort bar"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridSortBar'.",
                            "const": "Pages$GridSortBar"
                        },
                        "sortItems": {
                            "type": "array",
                            "description": "List of sort items",
                            "items": {
                                "type": "object",
                                "description": "Placeholder for sort items."
                            }
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "sortItems"
                    ]
                },
                "xPathConstraint": {
                    "type": "string",
                    "description": "XPath constraint for the search field"
                },
                "allowMultipleSelect": {
                    "type": "boolean",
                    "description": "Indicates if multiple values can be selected"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "caption",
                "placeholder",
                "customDateFormat",
                "type",
                "defaultValue",
                "attributeRef",
                "operator",
                "sortBar",
                "xPathConstraint",
                "allowMultipleSelect"
            ]
        },
        "LayoutGridColumn": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the layout grid column"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$LayoutGridColumn'",
                    "const": "Pages$LayoutGridColumn"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight of the column."
                },
                "tabletWeight": {
                    "type": "integer",
                    "description": "Tablet weight for the column"
                },
                "phoneWeight": {
                    "type": "integer",
                    "description": "Phone weight for the column."
                },
                "previewWidth": {
                    "type": "integer",
                    "description": "Preview width for the column"
                },
                "widgets": {
                    "type": "array",
                    "description": "List of widgets in the LayoutGrid column.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "verticalAlignment": {
                    "type": "string",
                    "description": "Vertical alignment of the column",
                    "enum": [
                        "None",
                        "Top",
                        "Middle",
                        "Bottom"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "weight",
                "tabletWeight",
                "phoneWeight",
                "previewWidth",
                "widgets"
            ]
        },
        "LayoutGridRow": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the row"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$LayoutGridRow'",
                    "const": "Pages$LayoutGridRow"
                },
                "columns": {
                    "type": "array",
                    "description": "Columns within this LayoutGrid row.",
                    "items": {
                        "$ref": "#/definitions/LayoutGridColumn"
                    }
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional visibility settings"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "verticalAlignment": {
                    "type": "string",
                    "description": "Vertical alignment of the row.",
                    "enum": [
                        "None",
                        "Top",
                        "Middle",
                        "Bottom"
                    ]
                },
                "horizontalAlignment": {
                    "type": "string",
                    "description": "Horizontal alignment of the row.",
                    "enum": [
                        "None",
                        "Left",
                        "Center",
                        "Right"
                    ]
                },
                "spacingBetweenColumns": {
                    "type": "boolean",
                    "description": "Whether to add spacing between columns"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "columns"
            ]
        },
        "LayoutGrid": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$LayoutGrid'",
                    "const": "Pages$LayoutGrid"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility."
                },
                "width": {
                    "type": "string",
                    "description": "Width of the LayoutGrid widget",
                    "enum": [
                        "FullWidth",
                        "Content"
                    ]
                },
                "rows": {
                    "type": "array",
                    "description": "Rows in a LayoutGrid widget",
                    "items": {
                        "$ref": "#/definitions/LayoutGridRow"
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "width",
                "rows"
            ]
        },
        "ClientTemplate": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the client template."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the client template object, should be 'Pages$ClientTemplate'",
                    "const": "Pages$ClientTemplate"
                },
                "template": {
                    "$ref": "#/definitions/Text"
                },
                "parameters": {
                    "type": "array",
                    "description": "List of template parameters",
                    "items": {
                        "type": "object",
                        "description": "Placeholder for template parameters"
                    }
                },
                "fallback": {
                    "$ref": "#/definitions/Text"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "template",
                "parameters",
                "fallback"
            ]
        },
        "DivContainer": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$DivContainer'",
                    "const": "Pages$DivContainer"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility"
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "widgets": {
                    "type": "array",
                    "description": "List of widgets within this container.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "renderMode": {
                    "type": "string",
                    "description": "Render mode of the container.",
                    "enum": [
                        "Div",
                        "Section"
                    ]
                },
                "onClickAction": {
                    "type": "object",
                    "description": "Settings for on click action",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the NoClientAction."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Boolean to specify if the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "screenReaderHidden": {
                    "type": "boolean",
                    "description": "Indicates whether the widget should be hidden for screen readers."
                },
                "nativeAccessibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Native accessibility settings of the widget"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "widgets",
                "renderMode",
                "onClickAction",
                "screenReaderHidden",
                "nativeAccessibilitySettings"
            ]
        },
        "DataView": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$DataView'",
                    "const": "Pages$DataView"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "dataSource": {
                    "type": "object",
                    "description": "Data source of the DataView widget.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Data source"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$MicroflowSource'.",
                            "enum": [
                                "Pages$MicroflowSource",
                                "Pages$DataViewSource"
                            ]
                        },
                        "forceFullObjects": {
                            "type": "boolean",
                            "description": "Boolean to specify whether data should be full objects."
                        },
                        "microflowSettings": {
                            "$ref": "#/definitions/MicroflowSettings"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "forceFullObjects"
                    ]
                },
                "widgets": {
                    "type": "array",
                    "description": "List of widgets within this container.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "footerWidgets": {
                    "type": "array",
                    "description": "List of widgets in the footer of the Dataview",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "editability": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional editability settings."
                },
                "showFooter": {
                    "type": "boolean",
                    "description": "Indicates whether the footer is visible"
                },
                "noEntityMessage": {
                    "$ref": "#/definitions/Text"
                },
                "labelWidth": {
                    "type": "integer",
                    "description": "Width of the label."
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode",
                    "enum": [
                        "Inherit",
                        "Control",
                        "Text"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "dataSource",
                "widgets",
                "footerWidgets",
                "editability",
                "conditionalEditabilitySettings",
                "showFooter",
                "noEntityMessage",
                "labelWidth",
                "readOnlyStyle"
            ]
        },
        "TextBox": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$TextBox'",
                    "const": "Pages$TextBox"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional editability settings."
                },
                "editable": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "labelTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "screenReaderLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Label for screen readers."
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode.",
                    "enum": [
                        "Inherit",
                        "Control"
                    ]
                },
                "validation": {
                    "type": "object",
                    "description": "Validation rules for the textbox.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the validation."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$WidgetValidation'.",
                            "const": "Pages$WidgetValidation"
                        },
                        "expression": {
                            "type": "string",
                            "description": "Boolean expression to be checked for validation"
                        },
                        "message": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "expression",
                        "message"
                    ]
                },
                "onChangeAction": {
                    "type": "object",
                    "description": "Settings for on change action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onEnterAction": {
                    "type": "object",
                    "description": "Settings for on enter action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onLeaveAction": {
                    "type": "object",
                    "description": "Settings for on leave action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the widget."
                },
                "ariaRequired": {
                    "type": "boolean",
                    "description": "Indicates whether this element is required for aria"
                },
                "placeholderTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "maxLengthCode": {
                    "type": "integer",
                    "description": "Maximum length of the value"
                },
                "autoFocus": {
                    "type": "boolean",
                    "description": "Boolean to indicate whether the input should be auto focused."
                },
                "inputMask": {
                    "type": "string",
                    "description": "Input mask for the widget."
                },
                "formattingInfo": {
                    "type": "object",
                    "description": "Formatting rules of the widget",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the formatting information"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$FormattingInfo'.",
                            "const": "Pages$FormattingInfo"
                        },
                        "decimalPrecision": {
                            "type": "integer",
                            "description": "Decimal precision to use"
                        },
                        "groupDigits": {
                            "type": "boolean",
                            "description": "Indicates if numbers should be grouped"
                        },
                        "enumFormat": {
                            "type": "string",
                            "description": "Enum format.",
                            "enum": [
                                "Text",
                                "Key",
                                "Image",
                                "Value"
                            ]
                        },
                        "dateFormat": {
                            "type": "string",
                            "description": "Date format to be used.",
                            "enum": [
                                "Date",
                                "DateTime",
                                "Time"
                            ]
                        },
                        "customDateFormat": {
                            "type": "string",
                            "description": "Custom date format to be used if applicable."
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "decimalPrecision",
                        "groupDigits",
                        "enumFormat",
                        "dateFormat",
                        "customDateFormat"
                    ]
                },
                "isPasswordBox": {
                    "type": "boolean",
                    "description": "Indicates whether the widget is a password box."
                },
                "keyboardType": {
                    "type": "string",
                    "description": "Keyboard type.",
                    "enum": [
                        "Default",
                        "Number",
                        "Email",
                        "Phone"
                    ]
                },
                "onEnterKeyPressAction": {
                    "type": "object",
                    "description": "Settings for on enter key press action",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "autocomplete": {
                    "type": "boolean",
                    "description": "Indicates whether the autocomplete feature is enabled"
                },
                "autocompletePurpose": {
                    "type": "string",
                    "description": "Purpose of autocomplete feature.",
                    "enum": [
                        "On",
                        "Off",
                        "Name",
                        "Email",
                        "Phone"
                    ]
                },
                "submitBehaviour": {
                    "type": "string",
                    "description": "Behaviour on submit of the input",
                    "enum": [
                        "OnChange",
                        "OnEndEditing"
                    ]
                },
                "submitOnInputDelay": {
                    "type": "integer",
                    "description": "Delay for input value submit."
                },
                "nativeAccessibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Native accessibility settings"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "conditionalEditabilitySettings",
                "editable",
                "labelTemplate",
                "screenReaderLabel",
                "attributeRef",
                "readOnlyStyle",
                "validation",
                "onChangeAction",
                "onEnterAction",
                "onLeaveAction",
                "sourceVariable",
                "ariaRequired",
                "placeholderTemplate",
                "maxLengthCode",
                "autoFocus",
                "inputMask",
                "formattingInfo",
                "isPasswordBox",
                "keyboardType",
                "onEnterKeyPressAction",
                "autocomplete",
                "autocompletePurpose",
                "submitBehaviour",
                "submitOnInputDelay",
                "nativeAccessibilitySettings"
            ]
        },
        "RadioButtonGroup": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$RadioButtonGroup'",
                    "const": "Pages$RadioButtonGroup"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility"
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional editability settings."
                },
                "editable": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "labelTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "screenReaderLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Label for screen readers."
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the attribute ref"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Entity Reference"
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "attribute"
                    ]
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode.",
                    "enum": [
                        "Inherit",
                        "Control"
                    ]
                },
                "validation": {
                    "type": "object",
                    "description": "Validation rules for the radio button group.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the validation"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$WidgetValidation'.",
                            "const": "Pages$WidgetValidation"
                        },
                        "expression": {
                            "type": "string",
                            "description": "Boolean expression to be checked for validation"
                        },
                        "message": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "expression",
                        "message"
                    ]
                },
                "onChangeAction": {
                    "type": "object",
                    "description": "Settings for on change action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Boolean to specify if the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onEnterAction": {
                    "type": "object",
                    "description": "Settings for on enter action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "onLeaveAction": {
                    "type": "object",
                    "description": "Settings for on leave action.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the widget."
                },
                "ariaRequired": {
                    "type": "boolean",
                    "description": "Indicates if this widget is required for aria"
                },
                "renderHorizontal": {
                    "type": "boolean",
                    "description": "Boolean to indicate if radio buttons should be rendered horizontally."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "conditionalEditabilitySettings",
                "editable",
                "labelTemplate",
                "screenReaderLabel",
                "attributeRef",
                "readOnlyStyle",
                "validation",
                "onChangeAction",
                "onEnterAction",
                "onLeaveAction",
                "sourceVariable",
                "ariaRequired",
                "renderHorizontal"
            ]
        },
        "SelectorSource": {
            "oneOf": [
                {
                    "type": "object",
                    "description": "Selector source settings.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Selector source"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$SelectorXPathSource'",
                            "const": "Pages$SelectorXPathSource"
                        },
                        "sortBar": {
                            "type": "object",
                            "description": "Settings for the sort bar",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the Grid sort bar"
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$GridSortBar'",
                                    "const": "Pages$GridSortBar"
                                },
                                "sortItems": {
                                    "type": "array",
                                    "description": "List of sort items",
                                    "items": {
                                        "type": "object",
                                        "description": "Placeholder for sort items."
                                    }
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "sortItems"
                            ]
                        },
                        "xPathConstraint": {
                            "type": "string",
                            "description": "XPath constraint to use"
                        },
                        "constrainedByRefs": {
                            "type": "array",
                            "description": "Constraints by references",
                            "items": {
                                "type": "object",
                                "description": "Placeholder for constrained by reference object."
                            }
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type"
                    ]
                },
                {
                    "title": "Selector Microflow Source",
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Pages$SelectorMicroflowSource"
                        },
                        "dataSourceMicroflowSettings": {
                            "$ref": "#/definitions/MicroflowSettings"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "dataSourceMicroflowSettings"
                    ]
                }
            ]
        },
        "MicroflowSettings": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "format": "uuid"
                },
                "$Type": {
                    "type": "string",
                    "const": "Pages$MicroflowSettings"
                },
                "microflow": {
                    "type": "string"
                },
                "parameterMappings": {
                    "type": "array",
                    "items": {}
                },
                "progressBar": {
                    "type": "string",
                    "enum": [
                        "None"
                    ]
                },
                "progressMessage": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "asynchronous": {
                    "type": "boolean"
                },
                "formValidations": {
                    "type": "string",
                    "enum": [
                        "None",
                        "All"
                    ]
                },
                "confirmationInfo": {
                    "type": [
                        "object",
                        "null"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "microflow"
            ]
        },
        "InputReferenceSetSelector": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$InputReferenceSetSelector'",
                    "const": "Pages$InputReferenceSetSelector"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility"
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional visibility settings"
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional editability."
                },
                "editable": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "labelTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "screenReaderLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Label for screen readers."
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to attribute",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": "object",
                            "description": "Entity Reference.",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the IndirectEntityRef."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'DomainModels$IndirectEntityRef'.",
                                    "const": "DomainModels$IndirectEntityRef"
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "List of entity reference steps.",
                                    "items": {
                                        "type": "object",
                                        "description": "Entity reference step.",
                                        "properties": {
                                            "$ID": {
                                                "type": "string",
                                                "description": "Unique identifier of the Entity Reference step"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "description": "Type of the object, should be 'DomainModels$EntityRefStep'.",
                                                "const": "DomainModels$EntityRefStep"
                                            },
                                            "association": {
                                                "type": "string",
                                                "description": "Name of association used for this step."
                                            },
                                            "destinationEntity": {
                                                "type": "string",
                                                "description": "Name of destination entity of this step."
                                            }
                                        },
                                        "required": [
                                            "$ID",
                                            "$Type",
                                            "association",
                                            "destinationEntity"
                                        ]
                                    }
                                }
                            },
                            "attribute": {
                                "type": "string",
                                "description": "Reference to attribute"
                            }
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "entityRef",
                        "attribute"
                    ]
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode.",
                    "enum": [
                        "Inherit",
                        "Control"
                    ]
                },
                "selectorSource": {
                    "$ref": "#/definitions/SelectorSource"
                },
                "selectPageSettings": {
                    "type": "object",
                    "description": "Page settings for the select page",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the page settings."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$PageSettings'.",
                            "const": "Pages$PageSettings"
                        },
                        "page": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Reference to the page to use."
                        },
                        "titleOverride": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/definitions/Text"
                                }
                            ]
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "page",
                        "parameterMappings"
                    ]
                },
                "onChangeAction": {
                    "type": "object",
                    "description": "Settings for on change action",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the action."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "disabledDuringExecution"
                    ]
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the widget."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "conditionalEditabilitySettings",
                "editable",
                "labelTemplate",
                "screenReaderLabel",
                "attributeRef",
                "readOnlyStyle",
                "selectorSource",
                "selectPageSettings",
                "onChangeAction",
                "sourceVariable"
            ]
        },
        "ReferenceSelector": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$ReferenceSelector'",
                    "const": "Pages$ReferenceSelector"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility."
                },
                "conditionalEditabilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional editability settings."
                },
                "editable": {
                    "type": "string",
                    "description": "Specifies when the widget is editable.",
                    "enum": [
                        "Always",
                        "Never",
                        "Conditional"
                    ]
                },
                "labelTemplate": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "screenReaderLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Label for screen readers."
                },
                "attributeRef": {
                    "type": "object",
                    "description": "Reference to the attribute.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the AttributeRef."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'DomainModels$AttributeRef'.",
                            "const": "DomainModels$AttributeRef"
                        },
                        "entityRef": {
                            "type": "object",
                            "description": "Entity Reference",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the IndirectEntityRef"
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'DomainModels$IndirectEntityRef'.",
                                    "const": "DomainModels$IndirectEntityRef"
                                },
                                "steps": {
                                    "type": "array",
                                    "description": "List of entity reference steps.",
                                    "items": {
                                        "type": "object",
                                        "description": "Entity reference step.",
                                        "properties": {
                                            "$ID": {
                                                "type": "string",
                                                "description": "Unique identifier of the Entity Reference step"
                                            },
                                            "$Type": {
                                                "type": "string",
                                                "description": "Type of the object, should be 'DomainModels$EntityRefStep'.",
                                                "const": "DomainModels$EntityRefStep"
                                            },
                                            "association": {
                                                "type": "string",
                                                "description": "Name of association used for this step."
                                            },
                                            "destinationEntity": {
                                                "type": "string",
                                                "description": "Name of destination entity of this step"
                                            }
                                        },
                                        "required": [
                                            "$ID",
                                            "$Type",
                                            "association",
                                            "destinationEntity"
                                        ]
                                    }
                                }
                            }
                        },
                        "attribute": {
                            "type": "string",
                            "description": "Reference to the attribute."
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "entityRef",
                        "attribute"
                    ]
                },
                "readOnlyStyle": {
                    "type": "string",
                    "description": "Style of the widget in read only mode.",
                    "enum": [
                        "Inherit",
                        "Control"
                    ]
                },
                "selectorSource": {
                    "$ref": "#/definitions/SelectorSource"
                },
                "selectPageSettings": {
                    "type": "object",
                    "description": "Select page settings.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the page settings."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$PageSettings'.",
                            "const": "Pages$PageSettings"
                        },
                        "page": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Reference to the page to use."
                        },
                        "titleOverride": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/definitions/Text"
                                }
                            ]
                        },
                        "onChangeAction": {
                            "type": "object",
                            "description": "Settings for on change action",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the action."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$NoClientAction'.",
                                    "const": "Pages$NoClientAction"
                                },
                                "disabledDuringExecution": {
                                    "type": "boolean",
                                    "description": "Indicates whether the action should be disabled during execution"
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "disabledDuringExecution"
                            ]
                        },
                        "sourceVariable": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Source variable of the widget."
                        },
                        "validation": {
                            "type": "object",
                            "description": "Validation rules for the reference selector",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the validation."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$WidgetValidation'.",
                                    "const": "Pages$WidgetValidation"
                                },
                                "expression": {
                                    "type": "string",
                                    "description": "Boolean expression to be checked for validation"
                                },
                                "message": {
                                    "$ref": "#/definitions/Text"
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "expression",
                                "message"
                            ]
                        },
                        "renderMode": {
                            "type": "string",
                            "description": "Render mode of this selector.",
                            "enum": [
                                "DropDown",
                                "AutoCompleter",
                                "Hybrid"
                            ]
                        },
                        "gotoPageSettings": {
                            "type": "object",
                            "description": "Settings for the goto page action.",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the page settings."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$PageSettings'.",
                                    "const": "Pages$PageSettings"
                                },
                                "page": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "Reference to the page to be opened."
                                },
                                "titleOverride": {
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "$ref": "#/definitions/Text"
                                        }
                                    ]
                                },
                                "parameterMappings": {
                                    "type": "array",
                                    "description": "List of parameter mappings.",
                                    "items": {
                                        "type": "object",
                                        "description": "Placeholder for parameter mappings."
                                    }
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "page",
                                "parameterMappings"
                            ]
                        },
                        "formattingInfo": {
                            "type": "object",
                            "description": "Formatting rules for the input",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the formatting information."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$FormattingInfo'.",
                                    "const": "Pages$FormattingInfo"
                                },
                                "decimalPrecision": {
                                    "type": "integer",
                                    "description": "Decimal precision to use"
                                },
                                "groupDigits": {
                                    "type": "boolean",
                                    "description": "Indicates if numbers should be grouped"
                                },
                                "enumFormat": {
                                    "type": "string",
                                    "description": "Enum format.",
                                    "enum": [
                                        "Text",
                                        "Key",
                                        "Value"
                                    ]
                                },
                                "dateFormat": {
                                    "type": "string",
                                    "description": "Date format to be used",
                                    "enum": [
                                        "Date",
                                        "DateTime",
                                        "Time"
                                    ]
                                },
                                "customDateFormat": {
                                    "type": "string",
                                    "description": "Custom date format if applicable"
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "decimalPrecision",
                                "groupDigits",
                                "enumFormat",
                                "dateFormat",
                                "customDateFormat"
                            ]
                        },
                        "emptyOptionCaption": {
                            "$ref": "#/definitions/Text"
                        },
                        "nativeAccessibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Native accessibility settings."
                        }
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "conditionalEditabilitySettings",
                "editable",
                "labelTemplate",
                "screenReaderLabel",
                "attributeRef",
                "readOnlyStyle",
                "selectorSource",
                "selectPageSettings",
                "onChangeAction",
                "sourceVariable",
                "validation",
                "renderMode",
                "gotoPageSettings",
                "formattingInfo",
                "emptyOptionCaption",
                "nativeAccessibilitySettings"
            ]
        },
        "ActionButton": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the action button."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$ActionButton'",
                    "const": "Pages$ActionButton"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility."
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Conditional visibility settings."
                },
                "caption": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "tooltip": {
                    "$ref": "#/definitions/Text"
                }
            }
        },
        "DynamicText": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the widget"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$DynamicText'",
                    "const": "Pages$DynamicText"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the widget"
                },
                "appearance": {
                    "$ref": "#/definitions/Appearance"
                },
                "tabIndex": {
                    "type": "integer",
                    "description": "Tab index for accessibility"
                },
                "conditionalVisibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Settings for conditional visibility."
                },
                "content": {
                    "$ref": "#/definitions/ClientTemplate"
                },
                "renderMode": {
                    "type": "string",
                    "description": "Render mode of the text",
                    "enum": [
                        "Text",
                        "H1",
                        "H2",
                        "H3",
                        "H4",
                        "H5",
                        "H6",
                        "Paragraph"
                    ]
                },
                "nativeTextStyle": {
                    "type": "string",
                    "description": "Text style to be used in Native apps.",
                    "enum": [
                        "Text",
                        "Heading1",
                        "Heading2",
                        "Heading3",
                        "Heading4",
                        "Heading5",
                        "Heading6"
                    ]
                },
                "nativeAccessibilitySettings": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Native accessibility settings of the widget."
                }
            },
            "required": [
                "$ID",
                "$Type",
                "name",
                "appearance",
                "tabIndex",
                "conditionalVisibilitySettings",
                "content",
                "renderMode",
                "nativeTextStyle",
                "nativeAccessibilitySettings"
            ]
        }
    },
    "properties": {
        "$ID": {
            "type": "string",
            "description": "Unique identifier of the page"
        },
        "$Type": {
            "type": "string",
            "description": "Type of the object, should be 'Pages$Page'",
            "const": "Pages$Page"
        },
        "name": {
            "type": "string",
            "description": "Name of the page"
        },
        "documentation": {
            "type": "string",
            "description": "Documentation for the page"
        },
        "excluded": {
            "type": "boolean",
            "description": "Whether the page is excluded"
        },
        "exportLevel": {
            "type": "string",
            "description": "Export level of the page",
            "enum": [
                "Hidden",
                "None",
                "All"
            ]
        },
        "canvasWidth": {
            "type": "integer",
            "description": "Width of the page canvas"
        },
        "canvasHeight": {
            "type": "integer",
            "description": "Height of the page canvas"
        },
        "parameters": {
            "type": "array",
            "description": "Parameters of the page",
            "items": {
                "type": "object",
                "description": "Placeholder for page parameters."
            }
        },
        "layoutCall": {
            "type": "object",
            "description": "Layout call configuration",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the layout call"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$LayoutCall'",
                    "const": "Pages$LayoutCall"
                },
                "layout": {
                    "type": "string",
                    "description": "Reference to the layout used."
                },
                "arguments": {
                    "type": "array",
                    "description": "List of Layout call arguments",
                    "items": {
                        "type": "object",
                        "description": "Argument for the layout call.",
                        "properties": {
                            "$ID": {
                                "type": "string",
                                "description": "Unique identifier of the LayoutCallArgument"
                            },
                            "$Type": {
                                "type": "string",
                                "description": "Type of the object, should be 'Pages$LayoutCallArgument'",
                                "const": "Pages$LayoutCallArgument"
                            },
                            "parameter": {
                                "type": "string",
                                "description": "Reference to the layout parameter."
                            },
                            "widgets": {
                                "type": "array",
                                "description": "List of widgets within the LayoutCallArgument.",
                                "items": {
                                    "$ref": "#/definitions/Widget"
                                }
                            }
                        },
                        "required": [
                            "$ID",
                            "$Type",
                            "parameter",
                            "widgets"
                        ]
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "layout",
                "arguments"
            ]
        },
        "title": {
            "$ref": "#/definitions/Text"
        },
        "appearance": {
            "$ref": "#/definitions/Appearance"
        },
        "allowedRoles": {
            "type": "array",
            "description": "List of allowed module roles",
            "items": {
                "type": "string"
            }
        },
        "popupCloseAction": {
            "type": "string",
            "description": "Close action when page is used as a popup. Buildin enum is ClosePage, CancelChanges.Or exist action button name of Pages$ActionButton #/definitions/ActionButton"
        },
        "popupWidth": {
            "type": "integer",
            "description": "Popup width in pixels."
        },
        "popupHeight": {
            "type": "integer",
            "description": "Popup height in pixels."
        },
        "popupResizable": {
            "type": "boolean",
            "description": "Indicates whether the popup is resizable"
        },
        "markAsUsed": {
            "type": "boolean",
            "description": "Indicates whether the page should be marked as used"
        },
        "url": {
            "type": "string",
            "description": "Url of the page"
        }
    },
    "required": [
        "$ID",
        "$Type",
        "name",
        "documentation",
        "excluded",
        "exportLevel",
        "canvasWidth",
        "canvasHeight",
        "parameters",
        "layoutCall",
        "title",
        "appearance",
        "allowedRoles",
        "popupCloseAction",
        "popupWidth",
        "popupHeight",
        "popupResizable",
        "markAsUsed",
        "url"
    ]
}