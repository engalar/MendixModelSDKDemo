{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Pages$Page",
    "description": "you must give a module name when gen a model, so i can confirm qulified name",
    "type": "object",
    "definitions": {
        "Identifiable": {
            "type": "object",
            "properties": {
                "$ID": {
                    "$ref": "common.schema.json#/definitions/Identifiable"
                }
            },
            "required": [
                "$ID"
            ]
        },
        "Appearance": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the appearance object, should be 'Pages$Appearance'",
                            "const": "Pages$Appearance"
                        },
                        "class": {
                            "type": "string",
                            "description": "CSS class of the object"
                        },
                        "style": {
                            "type": "string",
                            "description": "Inline style for the object"
                        },
                        "designProperties": {
                            "type": "array",
                            "description": "Design properties for the object",
                            "items": {
                                "type": "object",
                                "description": "Design property value",
                                "properties": {
                                    "$ID": {
                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'Pages$DesignPropertyValue'.",
                                        "const": "Pages$DesignPropertyValue"
                                    },
                                    "key": {
                                        "type": "string",
                                        "description": "Key for the design property.",
                                        "examples": [
                                            "Style"
                                        ]
                                    },
                                    "value": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "description": "Value of the design property.",
                                                "properties": {
                                                    "$ID": {
                                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                                    },
                                                    "$Type": {
                                                        "type": "string",
                                                        "const": "Pages$OptionDesignPropertyValue"
                                                    },
                                                    "option": {
                                                        "type": "string",
                                                        "description": "Option value for the design property"
                                                    }
                                                },
                                                "required": [
                                                    "$ID",
                                                    "$Type",
                                                    "option"
                                                ]
                                            },
                                            {
                                                "type": "object",
                                                "description": "Value of the design property.",
                                                "properties": {
                                                    "$ID": {
                                                        "$ref": "common.schema.json#/definitions/Identifiable"
                                                    },
                                                    "$Type": {
                                                        "type": "string",
                                                        "const": "Pages$ToggleDesignPropertyValue"
                                                    }
                                                },
                                                "required": [
                                                    "$ID",
                                                    "$Type"
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "key",
                                    "value"
                                ]
                            }
                        },
                        "dynamicClasses": {
                            "type": "string",
                            "description": "Dynamic classes for the object."
                        }
                    },
                    "required": [
                        "$Type",
                        "class",
                        "style",
                        "designProperties",
                        "dynamicClasses"
                    ]
                }
            ]
        },
        "Text": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the text object, should be 'Texts$Text'",
                            "const": "Texts$Text"
                        },
                        "translations": {
                            "type": "array",
                            "description": "List of translations for the text.",
                            "items": {
                                "type": "object",
                                "description": "Text translation object.",
                                "properties": {
                                    "$ID": {
                                        "type": "string",
                                        "description": "Unique identifier of the translation"
                                    },
                                    "$Type": {
                                        "type": "string",
                                        "description": "Type of the object, should be 'Texts$Translation'",
                                        "const": "Texts$Translation"
                                    },
                                    "languageCode": {
                                        "type": "string",
                                        "description": "Language code for the translation"
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "Translated text"
                                    }
                                },
                                "required": [
                                    "$ID",
                                    "$Type",
                                    "languageCode",
                                    "text"
                                ]
                            }
                        }
                    },
                    "required": [
                        "$Type",
                        "translations"
                    ]
                }
            ]
        },
        "ClientTemplate": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the client template object, should be 'Pages$ClientTemplate'",
                            "const": "Pages$ClientTemplate"
                        },
                        "template": {
                            "$ref": "#/definitions/Text"
                        },
                        "parameters": {
                            "type": "array",
                            "description": "List of template parameters",
                            "items": {
                                "type": "object",
                                "description": "Placeholder for template parameters"
                            }
                        },
                        "fallback": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$Type",
                        "template",
                        "parameters",
                        "fallback"
                    ]
                }
            ]
        },
        "NoClientAction": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$NoClientAction'.",
                            "const": "Pages$NoClientAction"
                        },
                        "disabledDuringExecution": {
                            "type": "boolean",
                            "description": "Indicates whether the action should be disabled during execution"
                        }
                    },
                    "required": [
                        "$Type",
                        "disabledDuringExecution"
                    ]
                }
            ]
        },
        "WidgetValidation": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$WidgetValidation'.",
                            "const": "Pages$WidgetValidation"
                        },
                        "expression": {
                            "type": "string",
                            "description": "Boolean expression to be checked for validation"
                        },
                        "message": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$Type",
                        "expression",
                        "message"
                    ]
                }
            ]
        },
        "FormattingInfo": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$FormattingInfo'.",
                            "const": "Pages$FormattingInfo"
                        },
                        "decimalPrecision": {
                            "type": "integer",
                            "description": "Decimal precision to use."
                        },
                        "groupDigits": {
                            "type": "boolean",
                            "description": "Indicates if numbers should be grouped"
                        },
                        "enumFormat": {
                            "type": "string",
                            "description": "Enum format.",
                            "enum": [
                                "Text",
                                "Key",
                                "Image",
                                "Value"
                            ]
                        },
                        "dateFormat": {
                            "type": "string",
                            "description": "Date format to be used.",
                            "enum": [
                                "Date",
                                "DateTime",
                                "Time"
                            ]
                        },
                        "customDateFormat": {
                            "type": "string",
                            "description": "Custom date format to be used if applicable."
                        }
                    },
                    "required": [
                        "$Type",
                        "decimalPrecision",
                        "groupDigits",
                        "enumFormat",
                        "dateFormat",
                        "customDateFormat"
                    ]
                }
            ]
        },
        "Icon": {
            "type": [
                "object",
                "null"
            ],
            "description": "Icon to be displayed on the button",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the Icon"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$ImageIcon' or 'Pages$GlyphIcon'",
                    "enum": [
                        "Pages$ImageIcon",
                        "Pages$GlyphIcon"
                    ]
                }
            }
        },
        "PageSettings": {
            "type": "object",
            "description": "Page settings for the select page",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the page settings."
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$PageSettings'.",
                    "const": "Pages$PageSettings"
                },
                "page": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Reference to the page to use."
                },
                "titleOverride": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/definitions/Text"
                        }
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "page"
            ]
        },
        "MicroflowSettings": {
            "type": "object",
            "properties": {
                "$ID": {
                    "type": "string",
                    "format": "uuid"
                },
                "$Type": {
                    "type": "string",
                    "const": "Pages$MicroflowSettings"
                },
                "microflow": {
                    "type": "string"
                },
                "parameterMappings": {
                    "type": "array",
                    "items": {}
                },
                "progressBar": {
                    "type": "string",
                    "enum": [
                        "None"
                    ]
                },
                "progressMessage": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "asynchronous": {
                    "type": "boolean"
                },
                "formValidations": {
                    "type": "string",
                    "enum": [
                        "None",
                        "All"
                    ]
                },
                "confirmationInfo": {
                    "type": [
                        "object",
                        "null"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "microflow"
            ]
        },
        "BasicWidget": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the widget"
                        },
                        "appearance": {
                            "$ref": "#/definitions/Appearance"
                        },
                        "tabIndex": {
                            "type": "integer",
                            "description": "Tab index for accessibility."
                        },
                        "conditionalVisibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Settings for conditional visibility"
                        },
                        "conditionalEditabilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Conditional editability settings."
                        },
                        "editable": {
                            "type": "string",
                            "description": "Specifies when the widget is editable.",
                            "enum": [
                                "Always",
                                "Never",
                                "Conditional"
                            ]
                        },
                        "readOnlyStyle": {
                            "type": "string",
                            "description": "Style of the widget in read only mode.",
                            "enum": [
                                "Inherit",
                                "Control",
                                "Text"
                            ]
                        }
                    },
                    "required": [
                        "name",
                        "appearance"
                    ]
                }
            ]
        },
        "EditableWidget": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "labelTemplate": {
                            "$ref": "#/definitions/ClientTemplate"
                        },
                        "screenReaderLabel": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Label for screen readers."
                        },
                        "attributeRef": {
                            "$ref": "common.schema.json#/definitions/AttributeRef"
                        },
                        "sourceVariable": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Source variable of the widget."
                        }
                    }
                }
            ]
        },
        "ActionWidget": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "caption": {
                            "$ref": "#/definitions/ClientTemplate"
                        },
                        "tooltip": {
                            "$ref": "#/definitions/Text"
                        },
                        "icon": {
                            "$ref": "#/definitions/Icon"
                        },
                        "buttonStyle": {
                            "type": "string",
                            "description": "Style of the button.",
                            "enum": [
                                "Default",
                                "Primary",
                                "Success",
                                "Info",
                                "Warning",
                                "Danger",
                                "Link"
                            ]
                        }
                    }
                }
            ]
        },
        "GridActionButton": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ActionWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridActionButton'.",
                            "const": "Pages$GridActionButton"
                        },
                        "action": {
                            "type": "object",
                            "description": "Action when button is clicked",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the Client action."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$DeleteClientAction'.",
                                    "const": "Pages$DeleteClientAction"
                                },
                                "disabledDuringExecution": {
                                    "type": "boolean",
                                    "description": "Indicates whether the action should be disabled during execution"
                                },
                                "closePage": {
                                    "type": "boolean",
                                    "description": "Boolean to specify if page should be closed"
                                },
                                "sourceVariable": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "Source variable for the delete action."
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "disabledDuringExecution",
                                "closePage"
                            ]
                        },
                        "maintainSelectionAfterMicroflow": {
                            "type": "boolean",
                            "description": "Indicates whether selection should be maintained after microflow."
                        }
                    },
                    "required": [
                        "$Type",
                        "action",
                        "maintainSelectionAfterMicroflow"
                    ]
                }
            ]
        },
        "GridControlBarItem": {
            "oneOf": [
                {
                    "type": "object",
                    "description": "Grid search button.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ActionWidget"
                        },
                        {
                            "properties": {
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$GridSearchButton'.",
                                    "const": "Pages$GridSearchButton"
                                }
                            },
                            "required": [
                                "$Type"
                            ]
                        }
                    ]
                },
                {
                    "type": "object",
                    "description": "Grid select button",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ActionWidget"
                        },
                        {
                            "properties": {
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$SelectButton'.",
                                    "const": "Pages$SelectButton"
                                }
                            },
                            "required": [
                                "$Type"
                            ]
                        }
                    ]
                },
                {
                    "$ref": "#/definitions/GridActionButton"
                }
            ]
        },
        "GridControlBar": {
            "type": "object",
            "description": "Settings for the control bar.",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridControlBar'.",
                            "const": "Pages$GridControlBar"
                        },
                        "items": {
                            "type": "array",
                            "description": "List of items in the control bar.",
                            "items": {
                                "$ref": "#/definitions/GridControlBarItem"
                            }
                        },
                        "defaultButton": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Reference to the default button."
                        }
                    },
                    "required": [
                        "$Type",
                        "items"
                    ]
                }
            ]
        },
        "GridSortItem": {
            "type": "object",
            "description": "Placeholder for sort item.",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridSortItem'.",
                            "const": "Pages$GridSortItem"
                        },
                        "attributeRef": {
                            "$ref": "./common.schema.json#/definitions/AttributeRef"
                        },
                        "sortDirection": {
                            "type": "string",
                            "description": "Direction of sort.",
                            "enum": [
                                "Ascending",
                                "Descending"
                            ]
                        }
                    },
                    "required": [
                        "$Type",
                        "attributeRef",
                        "sortDirection"
                    ]
                }
            ]
        },
        "GridSortBar": {
            "type": "object",
            "description": "Settings for the sort bar.",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridSortBar'.",
                            "const": "Pages$GridSortBar"
                        },
                        "sortItems": {
                            "type": "array",
                            "description": "List of sort items.",
                            "items": {
                                "$ref": "#/definitions/GridSortItem"
                            }
                        }
                    },
                    "required": [
                        "$Type",
                        "sortItems"
                    ]
                }
            ]
        },
        "SelectorSource": {
            "oneOf": [
                {
                    "type": "object",
                    "description": "Selector source settings.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the Selector source"
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$SelectorXPathSource'",
                            "const": "Pages$SelectorXPathSource"
                        },
                        "sortBar": {
                            "$ref": "#/definitions/GridSortBar"
                        },
                        "xPathConstraint": {
                            "type": "string",
                            "description": "XPath constraint to use"
                        },
                        "constrainedByRefs": {
                            "type": "array",
                            "description": "Constraints by references",
                            "items": {
                                "type": "object",
                                "description": "Placeholder for constrained by reference object."
                            }
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type"
                    ]
                },
                {
                    "title": "Selector Microflow Source",
                    "type": "object",
                    "properties": {
                        "$ID": {
                            "type": "string"
                        },
                        "$Type": {
                            "type": "string",
                            "const": "Pages$SelectorMicroflowSource"
                        },
                        "dataSourceMicroflowSettings": {
                            "$ref": "#/definitions/MicroflowSettings"
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "dataSourceMicroflowSettings"
                    ]
                }
            ]
        },
        "GridDataSource": {
            "type": "object",
            "description": "Data source of the DataGrid widget.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the Data source"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$GridXPathSource'.",
                    "const": "Pages$GridXPathSource"
                },
                "forceFullObjects": {
                    "type": "boolean",
                    "description": "Boolean to specify whether data should be full objects."
                },
                "entityRef": {
                    "$ref": "common.schema.json/#/definitions/entityRef"
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the grid"
                },
                "sortBar": {
                    "$ref": "#/definitions/GridSortBar"
                },
                "searchBar": {
                    "$ref": "#/definitions/SearchBar"
                },
                "xPathConstraint": {
                    "type": "string",
                    "description": "XPath constraint to use"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "forceFullObjects",
                "entityRef",
                "sortBar",
                "searchBar",
                "xPathConstraint"
            ]
        },
        "ListViewDataSource": {
            "type": "object",
            "description": "Data source of the ListView widget.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the Data source"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$ListViewXPathSource'.",
                    "const": "Pages$ListViewXPathSource"
                },
                "forceFullObjects": {
                    "type": "boolean",
                    "description": "Boolean to specify whether data should be full objects"
                },
                "entityRef": {
                    "$ref": "common.schema.json/#/definitions/entityRef"
                },
                "sourceVariable": {
                    "type": [
                        "object",
                        "null"
                    ],
                    "description": "Source variable of the list view"
                },
                "sortBar": {
                    "$ref": "#/definitions/GridSortBar"
                },
                "xPathConstraint": {
                    "type": "string",
                    "description": "XPath constraint to use"
                },
                "search": {
                    "type": "object",
                    "description": "Search settings.",
                    "properties": {
                        "$ID": {
                            "type": "string",
                            "description": "Unique identifier of the search object."
                        },
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$ListViewSearch'.",
                            "const": "Pages$ListViewSearch"
                        },
                        "searchRefs": {
                            "type": "array",
                            "description": "List of attribute references used for searching.",
                            "items": {
                                "$ref": "./common.schema.json#/definitions/AttributeRef"
                            }
                        }
                    },
                    "required": [
                        "$ID",
                        "$Type",
                        "searchRefs"
                    ]
                }
            },
            "required": [
                "$ID",
                "$Type",
                "forceFullObjects",
                "entityRef",
                "sortBar",
                "xPathConstraint",
                "search"
            ]
        },
        "DataViewDataSource": {
            "type": "object",
            "description": "Data source of the DataView widget.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the Data source"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$MicroflowSource'.",
                    "enum": [
                        "Pages$MicroflowSource",
                        "Pages$DataViewSource"
                    ]
                },
                "forceFullObjects": {
                    "type": "boolean",
                    "description": "Boolean to specify whether data should be full objects."
                },
                "microflowSettings": {
                    "$ref": "#/definitions/MicroflowSettings"
                }
            },
            "required": [
                "$ID",
                "$Type",
                "forceFullObjects"
            ]
        },
        "ComparisonSearchField": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$ComparisonSearchField'.",
                            "const": "Pages$ComparisonSearchField"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the search field"
                        },
                        "caption": {
                            "$ref": "#/definitions/Text"
                        },
                        "placeholder": {
                            "$ref": "#/definitions/Text"
                        },
                        "customDateFormat": {
                            "type": "string",
                            "description": "Custom date format to be used."
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the search field",
                            "enum": [
                                "Normal",
                                "Date",
                                "DateTime",
                                "Time",
                                "DatePart"
                            ]
                        },
                        "defaultValue": {
                            "type": "string",
                            "description": "Default value of the search field."
                        },
                        "attributeRef": {
                            "$ref": "./common.schema.json#/definitions/AttributeRef"
                        },
                        "operator": {
                            "type": "string",
                            "description": "Operator of the search field.",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "Greater",
                                "GreaterOrEqual",
                                "Less",
                                "LessOrEqual",
                                "Contains"
                            ]
                        }
                    },
                    "required": [
                        "$Type",
                        "name",
                        "caption",
                        "placeholder",
                        "customDateFormat",
                        "type",
                        "defaultValue",
                        "attributeRef",
                        "operator"
                    ]
                }
            ]
        },
        "DropDownSearchField": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$DropDownSearchField'.",
                            "const": "Pages$DropDownSearchField"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the widget"
                        },
                        "caption": {
                            "$ref": "#/definitions/Text"
                        },
                        "placeholder": {
                            "$ref": "#/definitions/Text"
                        },
                        "customDateFormat": {
                            "type": "string",
                            "description": "Custom date format."
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of search field",
                            "enum": [
                                "Normal",
                                "Date",
                                "DateTime"
                            ]
                        },
                        "defaultValue": {
                            "type": "string",
                            "description": "Default value for the search field"
                        },
                        "attributeRef": {
                            "$ref": "./common.schema.json#/definitions/AttributeRef"
                        },
                        "operator": {
                            "type": "string",
                            "description": "Operator used in search query",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "Greater",
                                "GreaterOrEqual",
                                "Less",
                                "LessOrEqual",
                                "Contains"
                            ]
                        },
                        "sortBar": {
                            "type": "object",
                            "description": "Settings for the sort bar",
                            "properties": {
                                "$ID": {
                                    "type": "string",
                                    "description": "Unique identifier of the Grid sort bar"
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$GridSortBar'.",
                                    "const": "Pages$GridSortBar"
                                },
                                "sortItems": {
                                    "type": "array",
                                    "description": "List of sort items",
                                    "items": {
                                        "type": "object",
                                        "description": "Placeholder for sort items."
                                    }
                                }
                            },
                            "required": [
                                "$ID",
                                "$Type",
                                "sortItems"
                            ]
                        },
                        "xPathConstraint": {
                            "type": "string",
                            "description": "XPath constraint for the search field"
                        },
                        "allowMultipleSelect": {
                            "type": "boolean",
                            "description": "Indicates if multiple values can be selected"
                        }
                    },
                    "required": [
                        "$Type",
                        "name",
                        "caption",
                        "placeholder",
                        "customDateFormat",
                        "type",
                        "defaultValue",
                        "attributeRef",
                        "operator",
                        "sortBar",
                        "xPathConstraint",
                        "allowMultipleSelect"
                    ]
                }
            ]
        },
        "SearchBar": {
            "type": "object",
            "description": "Settings for the search bar.",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$SearchBar'.",
                            "const": "Pages$SearchBar"
                        },
                        "items": {
                            "type": "array",
                            "description": "List of search fields.",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the search bar.",
                            "enum": [
                                "None",
                                "FoldableOpen",
                                "FoldableClosed",
                                "AlwaysVisible"
                            ]
                        },
                        "waitForSearch": {
                            "type": "boolean",
                            "description": "Boolean to indicate whether the grid should wait for search"
                        }
                    },
                    "required": [
                        "$Type",
                        "items",
                        "type",
                        "waitForSearch"
                    ]
                }
            ]
        },
        "Label": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$Label'",
                            "const": "Pages$Label"
                        },
                        "caption": {
                            "$ref": "#/definitions/Text"
                        }
                    },
                    "required": [
                        "$Type",
                        "caption"
                    ]
                }
            ]
        },
        "CheckBox": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EditableWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$CheckBox'",
                            "const": "Pages$CheckBox"
                        },
                        "validation": {
                            "$ref": "#/definitions/WidgetValidation"
                        },
                        "onChangeAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onEnterAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onLeaveAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "ariaRequired": {
                            "type": "boolean",
                            "description": "Indicates if this widget is required for aria"
                        },
                        "labelPosition": {
                            "type": "string",
                            "description": "Specifies where the label should be rendered",
                            "enum": [
                                "Default",
                                "Left",
                                "Top"
                            ]
                        },
                        "nativeRenderMode": {
                            "type": "string",
                            "description": "Native render mode of this checkbox",
                            "enum": [
                                "Switch",
                                "CheckBox"
                            ]
                        },
                        "nativeAccessibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Native accessibility settings of the widget"
                        }
                    },
                    "required": [
                        "$Type",
                        "validation",
                        "onChangeAction",
                        "onEnterAction",
                        "onLeaveAction",
                        "ariaRequired",
                        "labelPosition",
                        "nativeRenderMode",
                        "nativeAccessibilitySettings"
                    ]
                }
            ]
        },
        "TextBox": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EditableWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$TextBox'",
                            "const": "Pages$TextBox"
                        },
                        "validation": {
                            "$ref": "#/definitions/WidgetValidation"
                        },
                        "onChangeAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onEnterAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onLeaveAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "ariaRequired": {
                            "type": "boolean",
                            "description": "Indicates whether this element is required for aria"
                        },
                        "placeholderTemplate": {
                            "$ref": "#/definitions/ClientTemplate"
                        },
                        "maxLengthCode": {
                            "type": "integer",
                            "description": "Maximum length of the value"
                        },
                        "autoFocus": {
                            "type": "boolean",
                            "description": "Boolean to indicate whether the input should be auto focused."
                        },
                        "inputMask": {
                            "type": "string",
                            "description": "Input mask for the widget."
                        },
                        "formattingInfo": {
                            "$ref": "#/definitions/FormattingInfo"
                        },
                        "isPasswordBox": {
                            "type": "boolean",
                            "description": "Indicates whether the widget is a password box."
                        },
                        "keyboardType": {
                            "type": "string",
                            "description": "Keyboard type.",
                            "enum": [
                                "Default",
                                "Number",
                                "Email",
                                "Phone"
                            ]
                        },
                        "onEnterKeyPressAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "autocomplete": {
                            "type": "boolean",
                            "description": "Indicates whether the autocomplete feature is enabled"
                        },
                        "autocompletePurpose": {
                            "type": "string",
                            "description": "Purpose of autocomplete feature.",
                            "enum": [
                                "On",
                                "Off",
                                "Name",
                                "Email",
                                "Phone"
                            ]
                        },
                        "submitBehaviour": {
                            "type": "string",
                            "description": "Behaviour on submit of the input",
                            "enum": [
                                "OnChange",
                                "OnEndEditing"
                            ]
                        },
                        "submitOnInputDelay": {
                            "type": "integer",
                            "description": "Delay for input value submit."
                        },
                        "nativeAccessibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Native accessibility settings"
                        }
                    },
                    "required": [
                        "$Type",
                        "validation",
                        "onChangeAction",
                        "onEnterAction",
                        "onLeaveAction",
                        "ariaRequired",
                        "placeholderTemplate",
                        "maxLengthCode",
                        "autoFocus",
                        "inputMask",
                        "formattingInfo",
                        "isPasswordBox",
                        "keyboardType",
                        "onEnterKeyPressAction",
                        "autocomplete",
                        "autocompletePurpose",
                        "submitBehaviour",
                        "submitOnInputDelay",
                        "nativeAccessibilitySettings"
                    ]
                }
            ]
        },
        "RadioButtonGroup": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EditableWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$RadioButtonGroup'",
                            "const": "Pages$RadioButtonGroup"
                        },
                        "validation": {
                            "$ref": "#/definitions/WidgetValidation"
                        },
                        "onChangeAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onEnterAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "onLeaveAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "ariaRequired": {
                            "type": "boolean",
                            "description": "Indicates if this widget is required for aria"
                        },
                        "renderHorizontal": {
                            "type": "boolean",
                            "description": "Boolean to indicate if radio buttons should be rendered horizontally."
                        }
                    },
                    "required": [
                        "$Type",
                        "validation",
                        "onChangeAction",
                        "onEnterAction",
                        "onLeaveAction",
                        "ariaRequired",
                        "renderHorizontal"
                    ]
                }
            ]
        },
        "InputReferenceSetSelector": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EditableWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$InputReferenceSetSelector'",
                            "const": "Pages$InputReferenceSetSelector"
                        },
                        "selectorSource": {
                            "$ref": "#/definitions/SelectorSource"
                        },
                        "selectPageSettings": {
                            "$ref": "#/definitions/PageSettings"
                        },
                        "onChangeAction": {
                            "$ref": "#/definitions/NoClientAction"
                        }
                    },
                    "required": [
                        "$Type",
                        "selectorSource",
                        "selectPageSettings",
                        "onChangeAction"
                    ]
                }
            ]
        },
        "ReferenceSelector": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$ReferenceSelector'",
                            "const": "Pages$ReferenceSelector"
                        },
                        "selectorSource": {
                            "$ref": "#/definitions/SelectorSource"
                        },
                        "selectPageSettings": {
                            "type": "object",
                            "description": "Select page settings.",
                            "properties": {
                                "$ID": {
                                    "$ref": "common.schema.json#/definitions/Identifiable",
                                    "description": "Unique identifier of the page settings."
                                },
                                "$Type": {
                                    "type": "string",
                                    "description": "Type of the object, should be 'Pages$PageSettings'.",
                                    "const": "Pages$PageSettings"
                                },
                                "page": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "Reference to the page to use."
                                },
                                "titleOverride": {
                                    "oneOf": [
                                        {
                                            "type": "null"
                                        },
                                        {
                                            "$ref": "#/definitions/Text"
                                        }
                                    ]
                                },
                                "onChangeAction": {
                                    "$ref": "#/definitions/NoClientAction"
                                },
                                "validation": {
                                    "$ref": "#/definitions/WidgetValidation"
                                },
                                "renderMode": {
                                    "type": "string",
                                    "description": "Render mode of this selector.",
                                    "enum": [
                                        "DropDown",
                                        "AutoCompleter",
                                        "Hybrid"
                                    ]
                                },
                                "gotoPageSettings": {
                                    "type": "object",
                                    "description": "Settings for the goto page action.",
                                    "properties": {
                                        "$ID": {
                                            "type": "string",
                                            "description": "Unique identifier of the page settings."
                                        },
                                        "$Type": {
                                            "type": "string",
                                            "description": "Type of the object, should be 'Pages$PageSettings'.",
                                            "const": "Pages$PageSettings"
                                        },
                                        "page": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Reference to the page to be opened."
                                        },
                                        "titleOverride": {
                                            "oneOf": [
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "$ref": "#/definitions/Text"
                                                }
                                            ]
                                        },
                                        "parameterMappings": {
                                            "type": "array",
                                            "description": "List of parameter mappings.",
                                            "items": {
                                                "type": "object",
                                                "description": "Placeholder for parameter mappings."
                                            }
                                        }
                                    },
                                    "required": [
                                        "$ID",
                                        "$Type",
                                        "page",
                                        "parameterMappings"
                                    ]
                                },
                                "formattingInfo": {
                                    "$ref": "#/definitions/FormattingInfo"
                                },
                                "emptyOptionCaption": {
                                    "$ref": "#/definitions/Text"
                                },
                                "nativeAccessibilitySettings": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "Native accessibility settings."
                                }
                            }
                        }
                    },
                    "required": [
                        "$Type",
                        "selectorSource",
                        "selectPageSettings",
                        "onChangeAction",
                        "validation",
                        "renderMode",
                        "gotoPageSettings",
                        "formattingInfo",
                        "emptyOptionCaption",
                        "nativeAccessibilitySettings"
                    ]
                }
            ]
        },
        "ActionButton": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ActionWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$ActionButton'",
                            "const": "Pages$ActionButton"
                        }
                    },
                    "required": [
                        "$Type"
                    ]
                }
            ]
        },
        "DynamicText": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$DynamicText'",
                            "const": "Pages$DynamicText"
                        },
                        "content": {
                            "$ref": "#/definitions/ClientTemplate"
                        },
                        "renderMode": {
                            "type": "string",
                            "description": "Render mode of the text",
                            "enum": [
                                "Text",
                                "H1",
                                "H2",
                                "H3",
                                "H4",
                                "H5",
                                "H6",
                                "Paragraph"
                            ]
                        },
                        "nativeTextStyle": {
                            "type": "string",
                            "description": "Text style to be used in Native apps.",
                            "enum": [
                                "Text",
                                "Heading1",
                                "Heading2",
                                "Heading3",
                                "Heading4",
                                "Heading5",
                                "Heading6"
                            ]
                        },
                        "nativeAccessibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Native accessibility settings of the widget."
                        }
                    },
                    "required": [
                        "$Type",
                        "content",
                        "renderMode",
                        "nativeTextStyle",
                        "nativeAccessibilitySettings"
                    ]
                }
            ]
        },
        "DataGrid": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$DataGrid'.",
                            "const": "Pages$DataGrid"
                        },
                        "dataSource": {
                            "$ref": "#/definitions/GridDataSource"
                        },
                        "isControlBarVisible": {
                            "type": "boolean",
                            "description": "Indicates if the control bar is visible."
                        },
                        "showPagingBar": {
                            "type": "string",
                            "description": "Indicates when the paging bar should be visible.",
                            "enum": [
                                "No",
                                "Yes",
                                "YesWithTotalCount"
                            ]
                        },
                        "selectionMode": {
                            "type": "string",
                            "description": "Selection mode of the grid.",
                            "enum": [
                                "None",
                                "Single",
                                "SimpleMulti",
                                "ExtendedMulti"
                            ]
                        },
                        "selectFirst": {
                            "type": "boolean",
                            "description": "Boolean to specify if the first row should be selected"
                        },
                        "defaultButtonTrigger": {
                            "type": "string",
                            "description": "Default button trigger",
                            "enum": [
                                "Single",
                                "Double"
                            ]
                        },
                        "refreshTime": {
                            "type": "integer",
                            "description": "Refresh time of the grid"
                        },
                        "controlBar": {
                            "$ref": "#/definitions/GridControlBar"
                        },
                        "columns": {
                            "type": "array",
                            "description": "Columns within the DataGrid.",
                            "items": {
                                "$ref": "#/definitions/GridColumn"
                            }
                        },
                        "numberOfRows": {
                            "type": "integer",
                            "description": "Number of rows to be displayed in the grid"
                        },
                        "showEmptyRows": {
                            "type": "boolean",
                            "description": "Boolean to specify if empty rows should be shown"
                        },
                        "widthUnit": {
                            "type": "string",
                            "description": "Width unit of the grid",
                            "enum": [
                                "Weight",
                                "Pixels"
                            ]
                        },
                        "tooltipPage": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Page to be opened as tooltip."
                        },
                        "caption": {
                            "$ref": "#/definitions/ClientTemplate"
                        }
                    },
                    "required": [
                        "$Type",
                        "dataSource",
                        "isControlBarVisible",
                        "showPagingBar",
                        "selectionMode",
                        "selectFirst",
                        "defaultButtonTrigger",
                        "refreshTime",
                        "controlBar",
                        "columns",
                        "numberOfRows",
                        "showEmptyRows",
                        "widthUnit",
                        "tooltipPage",
                        "caption"
                    ]
                }
            ]
        },
        "GridColumn": {
            "type": "object",
            "description": "Datagrid column.",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$GridColumn'.",
                            "const": "Pages$GridColumn"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the column."
                        },
                        "caption": {
                            "$ref": "#/definitions/Text"
                        },
                        "attributeRef": {
                            "$ref": "./common.schema.json#/definitions/AttributeRef"
                        },
                        "formattingInfo": {
                            "$ref": "#/definitions/FormattingInfo"
                        },
                        "showTooltip": {
                            "type": "boolean",
                            "description": "Boolean to indicate if tooltip should be shown."
                        },
                        "aggregateCaption": {
                            "$ref": "#/definitions/Text"
                        },
                        "aggregateFunction": {
                            "type": "string",
                            "description": "Aggregation function to use for the column.",
                            "enum": [
                                "None",
                                "Sum",
                                "Average",
                                "Min",
                                "Max",
                                "Count"
                            ]
                        },
                        "editable": {
                            "type": "boolean",
                            "description": "Boolean to indicate if column is editable."
                        },
                        "width": {
                            "type": "integer",
                            "description": "Width of the column."
                        },
                        "appearance": {
                            "$ref": "#/definitions/Appearance"
                        }
                    },
                    "required": [
                        "$Type",
                        "name",
                        "caption",
                        "attributeRef",
                        "formattingInfo",
                        "showTooltip",
                        "aggregateCaption",
                        "aggregateFunction",
                        "editable",
                        "width",
                        "appearance"
                    ]
                }
            ]
        },
        "LayoutGridColumn": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$LayoutGridColumn'",
                            "const": "Pages$LayoutGridColumn"
                        },
                        "weight": {
                            "type": "integer",
                            "description": "Weight of the column."
                        },
                        "tabletWeight": {
                            "type": "integer",
                            "description": "Tablet weight for the column"
                        },
                        "phoneWeight": {
                            "type": "integer",
                            "description": "Phone weight for the column."
                        },
                        "previewWidth": {
                            "type": "integer",
                            "description": "Preview width for the column"
                        },
                        "widgets": {
                            "type": "array",
                            "description": "List of widgets in the LayoutGrid column.",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        },
                        "appearance": {
                            "$ref": "#/definitions/Appearance"
                        },
                        "verticalAlignment": {
                            "type": "string",
                            "description": "Vertical alignment of the column",
                            "enum": [
                                "None",
                                "Top",
                                "Middle",
                                "Bottom"
                            ]
                        }
                    },
                    "required": [
                        "$Type",
                        "weight",
                        "tabletWeight",
                        "phoneWeight",
                        "previewWidth",
                        "widgets"
                    ]
                }
            ]
        },
        "LayoutGridRow": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$LayoutGridRow'",
                            "const": "Pages$LayoutGridRow"
                        },
                        "columns": {
                            "type": "array",
                            "description": "Columns within this LayoutGrid row.",
                            "items": {
                                "$ref": "#/definitions/LayoutGridColumn"
                            }
                        },
                        "conditionalVisibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Conditional visibility settings"
                        },
                        "appearance": {
                            "$ref": "#/definitions/Appearance"
                        },
                        "verticalAlignment": {
                            "type": "string",
                            "description": "Vertical alignment of the row.",
                            "enum": [
                                "None",
                                "Top",
                                "Middle",
                                "Bottom"
                            ]
                        },
                        "horizontalAlignment": {
                            "type": "string",
                            "description": "Horizontal alignment of the row.",
                            "enum": [
                                "None",
                                "Left",
                                "Center",
                                "Right"
                            ]
                        },
                        "spacingBetweenColumns": {
                            "type": "boolean",
                            "description": "Whether to add spacing between columns"
                        }
                    },
                    "required": [
                        "$Type",
                        "columns"
                    ]
                }
            ]
        },
        "LayoutGrid": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$LayoutGrid'",
                            "const": "Pages$LayoutGrid"
                        },
                        "width": {
                            "type": "string",
                            "description": "Width of the LayoutGrid widget",
                            "enum": [
                                "FullWidth",
                                "Content"
                            ]
                        },
                        "rows": {
                            "type": "array",
                            "description": "Rows in a LayoutGrid widget",
                            "items": {
                                "$ref": "#/definitions/LayoutGridRow"
                            }
                        }
                    },
                    "required": [
                        "$Type",
                        "width",
                        "rows"
                    ]
                }
            ]
        },
        "DivContainer": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$DivContainer'",
                            "const": "Pages$DivContainer"
                        },
                        "widgets": {
                            "type": "array",
                            "description": "List of widgets within this container.",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        },
                        "renderMode": {
                            "type": "string",
                            "description": "Render mode of the container.",
                            "enum": [
                                "Div",
                                "Section"
                            ]
                        },
                        "onClickAction": {
                            "$ref": "#/definitions/NoClientAction"
                        },
                        "screenReaderHidden": {
                            "type": "boolean",
                            "description": "Indicates whether the widget should be hidden for screen readers."
                        },
                        "nativeAccessibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Native accessibility settings of the widget"
                        }
                    },
                    "required": [
                        "$Type",
                        "widgets",
                        "renderMode",
                        "onClickAction",
                        "screenReaderHidden",
                        "nativeAccessibilitySettings"
                    ]
                }
            ]
        },
        "ListView": {
            "type": "object",
            "properties": {
                "$Type": {
                    "type": "string",
                    "description": "Type of the widget, should be 'Pages$ListView'",
                    "const": "Pages$ListView"
                },
                "dataSource": {
                    "$ref": "#/definitions/ListViewDataSource"
                },
                "widgets": {
                    "type": "array",
                    "description": "List of widgets within this container.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of items per page"
                },
                "clickAction": {
                    "$ref": "#/definitions/NoClientAction"
                },
                "editable": {
                    "type": "boolean",
                    "description": "Boolean to indicate if list view is editable."
                },
                "templates": {
                    "type": "array",
                    "description": "List of templates within this container",
                    "items": {
                        "type": "object",
                        "description": "Placeholder for template object."
                    }
                },
                "scrollDirection": {
                    "type": "string",
                    "description": "Scroll direction of the list view",
                    "enum": [
                        "Vertical",
                        "Horizontal"
                    ]
                },
                "numberOfColumns": {
                    "type": "integer",
                    "description": "Number of columns for horizontal layout"
                },
                "pullDownAction": {
                    "$ref": "#/definitions/NoClientAction"
                }
            },
            "required": [
                "$Type",
                "dataSource",
                "widgets",
                "pageSize",
                "clickAction",
                "editable",
                "templates",
                "scrollDirection",
                "numberOfColumns",
                "pullDownAction"
            ]
        },
        "DataView": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$DataView'",
                            "const": "Pages$DataView"
                        },
                        "dataSource": {
                            "$ref": "#/definitions/DataViewDataSource"
                        },
                        "widgets": {
                            "type": "array",
                            "description": "List of widgets within this container.",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        },
                        "footerWidgets": {
                            "type": "array",
                            "description": "List of widgets in the footer of the Dataview",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        },
                        "editability": {
                            "type": "string",
                            "description": "Specifies when the widget is editable.",
                            "enum": [
                                "Always",
                                "Never",
                                "Conditional"
                            ]
                        },
                        "conditionalEditabilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Conditional editability settings."
                        },
                        "showFooter": {
                            "type": "boolean",
                            "description": "Indicates whether the footer is visible"
                        },
                        "noEntityMessage": {
                            "$ref": "#/definitions/Text"
                        },
                        "labelWidth": {
                            "type": "integer",
                            "description": "Width of the label."
                        },
                        "readOnlyStyle": {
                            "type": "string",
                            "description": "Style of the widget in read only mode",
                            "enum": [
                                "Inherit",
                                "Control",
                                "Text"
                            ]
                        }
                    },
                    "required": [
                        "$Type",
                        "dataSource",
                        "widgets",
                        "footerWidgets",
                        "editability",
                        "conditionalEditabilitySettings",
                        "showFooter",
                        "noEntityMessage",
                        "labelWidth",
                        "readOnlyStyle"
                    ]
                }
            ]
        },
        "TabPage": {
            "type": "object",
            "description": "Tab page object",
            "allOf": [
                {
                    "$ref": "#/definitions/Identifiable"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the object, should be 'Pages$TabPage'",
                            "const": "Pages$TabPage"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the tab page."
                        },
                        "caption": {
                            "$ref": "#/definitions/Text"
                        },
                        "refreshOnShow": {
                            "type": "boolean",
                            "description": "Boolean to specify if page should refresh on show."
                        },
                        "conditionalVisibilitySettings": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Settings for conditional visibility of tab page"
                        },
                        "widgets": {
                            "type": "array",
                            "description": "List of widgets within this tab page.",
                            "items": {
                                "type": "object",
                                "description": "Widget object, refer to widget definitions for properties"
                            }
                        },
                        "badge": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "Badge of the tab page"
                        }
                    },
                    "required": [
                        "$Type",
                        "name",
                        "caption",
                        "refreshOnShow",
                        "conditionalVisibilitySettings",
                        "widgets",
                        "badge"
                    ]
                }
            ]
        },
        "TabContainer": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BasicWidget"
                },
                {
                    "properties": {
                        "$Type": {
                            "type": "string",
                            "description": "Type of the widget, should be 'Pages$TabContainer'",
                            "const": "Pages$TabContainer"
                        },
                        "tabPages": {
                            "type": "array",
                            "description": "List of tab pages",
                            "items": {
                                "$ref": "#/definitions/TabPage"
                            }
                        },
                        "defaultPage": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Default selected tab page."
                        }
                    },
                    "required": [
                        "$Type",
                        "tabPages",
                        "defaultPage"
                    ]
                }
            ]
        },
        "BuildinWidget": {
            "oneOf": [
                {
                    "$ref": "#/definitions/ComparisonSearchField"
                },
                {
                    "$ref": "#/definitions/DropDownSearchField"
                },
                {
                    "$ref": "#/definitions/LayoutGrid"
                },
                {
                    "$ref": "#/definitions/DivContainer"
                },
                {
                    "$ref": "#/definitions/ListView"
                },
                {
                    "$ref": "#/definitions/DataView"
                },
                {
                    "$ref": "#/definitions/DynamicText"
                },
                {
                    "$ref": "#/definitions/DataGrid"
                },
                {
                    "$ref": "#/definitions/TextBox"
                },
                {
                    "$ref": "#/definitions/Label"
                },
                {
                    "$ref": "#/definitions/InputReferenceSetSelector"
                },
                {
                    "$ref": "#/definitions/CheckBox"
                },
                {
                    "$ref": "#/definitions/ReferenceSelector"
                },
                {
                    "$ref": "#/definitions/ActionButton"
                },
                {
                    "$ref": "#/definitions/LayoutGridColumn"
                },
                {
                    "$ref": "#/definitions/RadioButtonGroup"
                },
                {
                    "$ref": "#/definitions/TabContainer"
                },
                {
                    "$ref": "#/definitions/GridControlBar"
                },
                {
                    "$ref": "#/definitions/GridActionButton"
                }
            ]
        },
        "Widget": {
            "oneOf": [
                {
                    "$ref": "#/definitions/BuildinWidget"
                },
                {
                    "$ref": "widget.schema.json#"
                }
            ]
        },
        "LayoutCallArgument": {
            "type": "object",
            "description": "Argument for the layout call.",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the LayoutCallArgument"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$LayoutCallArgument'",
                    "const": "Pages$LayoutCallArgument"
                },
                "parameter": {
                    "type": "string",
                    "description": "page layout placeholder name",
                    "examples": [
                        "Atlas_Core.Atlas_Default.Main"
                    ]
                },
                "widgets": {
                    "type": "array",
                    "description": "List of widgets within the LayoutCallArgument.",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "parameter",
                "widgets"
            ]
        },
        "LayoutCall": {
            "type": "object",
            "description": "Layout call configuration",
            "properties": {
                "$ID": {
                    "type": "string",
                    "description": "Unique identifier of the layout call"
                },
                "$Type": {
                    "type": "string",
                    "description": "Type of the object, should be 'Pages$LayoutCall'",
                    "const": "Pages$LayoutCall"
                },
                "layout": {
                    "type": "string",
                    "description": "Page layout document name, consist of module name and layout name, reference a exist layout document.",
                    "examples": [
                        "Atlas_Core.Atlas_Default"
                    ]
                },
                "arguments": {
                    "type": "array",
                    "description": "List of Layout call arguments",
                    "items": {
                        "$ref": "#/definitions/LayoutCallArgument"
                    }
                }
            },
            "required": [
                "$ID",
                "$Type",
                "layout",
                "arguments"
            ]
        }
    },
    "properties": {
        "$ID": {
            "type": "string",
            "description": "Unique identifier of the page"
        },
        "$Type": {
            "type": "string",
            "description": "Type of the object, should be 'Pages$Page'",
            "const": "Pages$Page"
        },
        "name": {
            "type": "string",
            "description": "Name of the page"
        },
        "documentation": {
            "type": "string",
            "description": "Documentation for the page"
        },
        "excluded": {
            "type": "boolean",
            "description": "Whether the page is excluded"
        },
        "exportLevel": {
            "type": "string",
            "description": "Export level of the page",
            "enum": [
                "Hidden",
                "None",
                "All"
            ]
        },
        "canvasWidth": {
            "type": "integer",
            "description": "Width of the page canvas"
        },
        "canvasHeight": {
            "type": "integer",
            "description": "Height of the page canvas"
        },
        "parameters": {
            "type": "array",
            "description": "Parameters of the page",
            "items": {
                "type": "object",
                "description": "Placeholder for page parameters."
            }
        },
        "layoutCall": {
            "$ref": "#/definitions/LayoutCall"
        },
        "title": {
            "$ref": "#/definitions/Text"
        },
        "appearance": {
            "$ref": "#/definitions/Appearance"
        },
        "allowedRoles": {
            "type": "array",
            "description": "List of allowed module roles",
            "items": {
                "type": "string"
            }
        },
        "popupCloseAction": {
            "type": "string",
            "description": "Close action when page is used as a popup. Buildin enum is ClosePage, CancelChanges.Or exist action button name of Pages$ActionButton #/definitions/ActionButton"
        },
        "popupWidth": {
            "type": "integer",
            "description": "Popup width in pixels."
        },
        "popupHeight": {
            "type": "integer",
            "description": "Popup height in pixels."
        },
        "popupResizable": {
            "type": "boolean",
            "description": "Indicates whether the popup is resizable"
        },
        "markAsUsed": {
            "type": "boolean",
            "description": "Indicates whether the page should be marked as used"
        },
        "url": {
            "type": "string",
            "description": "Url of the page"
        }
    },
    "required": [
        "$ID",
        "$Type",
        "name",
        "documentation",
        "excluded",
        "exportLevel",
        "canvasWidth",
        "canvasHeight",
        "parameters",
        "layoutCall",
        "title",
        "appearance",
        "allowedRoles",
        "popupCloseAction",
        "popupWidth",
        "popupHeight",
        "popupResizable",
        "markAsUsed",
        "url"
    ]
}