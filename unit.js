function mf(unit, model) {

  /*
   * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
   * from unit with id "dc540c79-7864-4b89-bea0-de3bf89b776d" of type Microflows$Microflow
   * in working copy "ModelSdkDemo"
   * on 19-4-2023.
   */

  var startEvent1 = microflows.StartEvent.create(model);
  startEvent1.relativeMiddlePoint = { "x": 50, "y": 200 };
  startEvent1.size = { "width": 20, "height": 20 };

  var endEvent1 = microflows.EndEvent.create(model);
  endEvent1.relativeMiddlePoint = { "x": 710, "y": 200 };
  endEvent1.size = { "width": 20, "height": 20 };

  var integerType1 = datatypes.IntegerType.create(model);

  var rowIdx1 = microflows.MicroflowParameterObject.create(model);
  rowIdx1.relativeMiddlePoint = { "x": 50, "y": 40 };
  rowIdx1.size = { "width": 30, "height": 30 };
  rowIdx1.name = "RowIdx";
  rowIdx1.variableType = integerType1;   // Note: for this property a default value is defined.
  rowIdx1.hasVariableNameBeenChanged = true;

  var stringType1 = datatypes.StringType.create(model);

  var sheetName1 = microflows.MicroflowParameterObject.create(model);
  sheetName1.relativeMiddlePoint = { "x": 160, "y": 40 };
  sheetName1.size = { "width": 30, "height": 30 };
  sheetName1.name = "SheetName";
  sheetName1.variableType = stringType1;   // Note: for this property a default value is defined.
  sheetName1.hasVariableNameBeenChanged = true;

  var basicCodeActionParameterValue1 = microflows.BasicCodeActionParameterValue.create(model);
  basicCodeActionParameterValue1.argument = "$SheetName";

  var javaActionParameterMapping1 = microflows.JavaActionParameterMapping.create(model);
  javaActionParameterMapping1.parameter = model.findJavaActionParameterByQualifiedName("Advanced_Excel.Cell_ReadString.SheetName");
  javaActionParameterMapping1.parameterValue = basicCodeActionParameterValue1;   // Note: for this property a default value is defined.

  var basicCodeActionParameterValue2 = microflows.BasicCodeActionParameterValue.create(model);
  basicCodeActionParameterValue2.argument = "$RowIdx";

  var javaActionParameterMapping2 = microflows.JavaActionParameterMapping.create(model);
  javaActionParameterMapping2.parameter = model.findJavaActionParameterByQualifiedName("Advanced_Excel.Cell_ReadString.Row");
  javaActionParameterMapping2.parameterValue = basicCodeActionParameterValue2;   // Note: for this property a default value is defined.

  var basicCodeActionParameterValue3 = microflows.BasicCodeActionParameterValue.create(model);
  basicCodeActionParameterValue3.argument = "0";

  var javaActionParameterMapping3 = microflows.JavaActionParameterMapping.create(model);
  javaActionParameterMapping3.parameter = model.findJavaActionParameterByQualifiedName("Advanced_Excel.Cell_ReadString.Column");
  javaActionParameterMapping3.parameterValue = basicCodeActionParameterValue3;   // Note: for this property a default value is defined.

  var javaActionCallAction1 = microflows.JavaActionCallAction.create(model);
  javaActionCallAction1.javaAction = model.findJavaActionByQualifiedName("Advanced_Excel.Cell_ReadString");
  javaActionCallAction1.parameterMappings.push(javaActionParameterMapping1);
  javaActionCallAction1.parameterMappings.push(javaActionParameterMapping2);
  javaActionCallAction1.parameterMappings.push(javaActionParameterMapping3);
  javaActionCallAction1.outputVariableName = "OpportunityId";

  var actionActivity1 = microflows.ActionActivity.create(model);
  actionActivity1.relativeMiddlePoint = { "x": 190, "y": 200 };
  actionActivity1.size = { "width": 120, "height": 60 };
  actionActivity1.action = javaActionCallAction1;

  var createObjectAction1 = microflows.CreateObjectAction.create(model);
  createObjectAction1.entity = model.findEntityByQualifiedName("MyFirstModule.Opportunity");
  createObjectAction1.outputVariableName = "NewOpportunity";

  var actionActivity2 = microflows.ActionActivity.create(model);
  actionActivity2.relativeMiddlePoint = { "x": 380, "y": 200 };
  actionActivity2.size = { "width": 120, "height": 60 };
  actionActivity2.action = createObjectAction1;

  var memberChange1 = microflows.MemberChange.create(model);
  memberChange1.attribute = model.findAttributeByQualifiedName("MyFirstModule.Opportunity.OpportunityId");
  memberChange1.value = "$OpportunityId";

  var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
  changeObjectAction1.items.push(memberChange1);
  changeObjectAction1.changeVariableName = "NewOpportunity";

  var actionActivity3 = microflows.ActionActivity.create(model);
  actionActivity3.relativeMiddlePoint = { "x": 570, "y": 200 };
  actionActivity3.size = { "width": 120, "height": 60 };
  actionActivity3.action = changeObjectAction1;
  actionActivity3.caption = "S";
  actionActivity3.autoGenerateCaption = false;

  var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
  microflowObjectCollection1.objects.push(startEvent1);
  microflowObjectCollection1.objects.push(endEvent1);
  microflowObjectCollection1.objects.push(rowIdx1);
  microflowObjectCollection1.objects.push(sheetName1);
  microflowObjectCollection1.objects.push(actionActivity1);
  microflowObjectCollection1.objects.push(actionActivity2);
  microflowObjectCollection1.objects.push(actionActivity3);

  var noCase1 = microflows.NoCase.create(model);

  var sequenceFlow1 = microflows.SequenceFlow.create(model);
  sequenceFlow1.originConnectionIndex = 1;
  sequenceFlow1.destinationConnectionIndex = 3;
  sequenceFlow1.originBezierVector = { "width": 0, "height": 0 };
  sequenceFlow1.destinationBezierVector = { "width": -30, "height": 0 };
  sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

  var noCase2 = microflows.NoCase.create(model);

  var sequenceFlow2 = microflows.SequenceFlow.create(model);
  sequenceFlow2.originConnectionIndex = 1;
  sequenceFlow2.destinationConnectionIndex = 3;
  sequenceFlow2.originBezierVector = { "width": 30, "height": 0 };
  sequenceFlow2.destinationBezierVector = { "width": -30, "height": 0 };
  sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

  var noCase3 = microflows.NoCase.create(model);

  var sequenceFlow3 = microflows.SequenceFlow.create(model);
  sequenceFlow3.originConnectionIndex = 1;
  sequenceFlow3.destinationConnectionIndex = 3;
  sequenceFlow3.originBezierVector = { "width": 30, "height": 0 };
  sequenceFlow3.destinationBezierVector = { "width": -30, "height": 0 };
  sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

  var noCase4 = microflows.NoCase.create(model);

  var sequenceFlow4 = microflows.SequenceFlow.create(model);
  sequenceFlow4.originConnectionIndex = 1;
  sequenceFlow4.destinationConnectionIndex = 3;
  sequenceFlow4.originBezierVector = { "width": 30, "height": 0 };
  sequenceFlow4.destinationBezierVector = { "width": -15, "height": 0 };
  sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

  var voidType1 = datatypes.VoidType.create(model);

  var translation1 = texts.Translation.create(model);
  translation1.languageCode = "en_US";

  var text1 = texts.Text.create(model);
  text1.translations.push(translation1);

  var microflow1 = microflows.Microflow.createIn(unit);
  microflow1.name = "Microflow";
  microflow1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
  microflow1.flows.push(sequenceFlow1);
  microflow1.flows.push(sequenceFlow2);
  microflow1.flows.push(sequenceFlow3);
  microflow1.flows.push(sequenceFlow4);
  microflow1.microflowReturnType = voidType1;
  microflow1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

  sequenceFlow1.origin = startEvent1;
  sequenceFlow1.destination = actionActivity1;

  sequenceFlow2.origin = actionActivity1;
  sequenceFlow2.destination = actionActivity2;

  sequenceFlow3.origin = actionActivity2;
  sequenceFlow3.destination = actionActivity3;

  sequenceFlow4.origin = actionActivity3;
  sequenceFlow4.destination = endEvent1;

}